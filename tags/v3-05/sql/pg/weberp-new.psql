--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON SCHEMA public IS 'Standard public schema';


--
-- Name: plpgsql; Type: PROCEDURAL LANGUAGE; Schema: -; Owner: 
--

CREATE PROCEDURAL LANGUAGE plpgsql;


SET search_path = public, pg_catalog;

--
-- Name: pgblob; Type: DOMAIN; Schema: public; Owner: weberp_db_user
--

CREATE DOMAIN pgblob AS text;


--
-- Name: chkstockserialmoves(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION chkstockserialmoves() RETURNS "trigger"
    AS $$
BEGIN
	NEW.LocCode := getStkMoveLoc( NEW.StockMoveNo );
	RETURN NEW;
END;
$$
    LANGUAGE plpgsql;


--
-- Name: concat(text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION concat(text, text) RETURNS text
    AS $_$
DECLARE
  pTxt1 ALIAS FOR $1;
  pTxt2 ALIAS FOR $2;
BEGIN
  RETURN (pTxt1 || pTxt2);
END;

$_$
    LANGUAGE plpgsql;


--
-- Name: concat(text, text, text); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION concat(text, text, text) RETURNS text
    AS $_$
DECLARE
  pTxt1 ALIAS FOR $1;
  pTxt2 ALIAS FOR $2;
  pTxt3 ALIAS FOR $3;
BEGIN
  RETURN (pTxt1 || pTxt2 || pTxt3);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add(date, interval); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add(date, interval) RETURNS date
    AS $_$
DECLARE
  pDate     ALIAS FOR $1;
  pInterval ALIAS FOR $2;
BEGIN
  RETURN (pDate + pInterval)::date;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add(timestamp with time zone, interval); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add(timestamp with time zone, interval) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pDate     ALIAS FOR $1;
  pInterval ALIAS FOR $2;
BEGIN
  RETURN (pDate + pInterval)::timestamp with time zone;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add(timestamp without time zone, interval); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add(timestamp without time zone, interval) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pDate     ALIAS FOR $1;
  pInterval ALIAS FOR $2;
BEGIN
  RETURN (pDate + pInterval)::timestamp;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_days(timestamp with time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_days(timestamp with time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
  pDays ALIAS FOR $2;
BEGIN
  RETURN (pDate + (pDays || ' days')::interval)::timestamp;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_days(timestamp without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_days(timestamp without time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
  pDays ALIAS FOR $2;
BEGIN
  RETURN date_add_days(pDate::timestamp with time zone, pDays)::timestamp;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_days(date, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_days(date, integer) RETURNS date
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
  pDays ALIAS FOR $2;
BEGIN
  RETURN date_add_days(pDate::timestamp with time zone, pDays)::date;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_months(timestamp with time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_months(timestamp with time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pDate   ALIAS FOR $1;
  pMonths ALIAS FOR $2;
BEGIN
  RETURN (pDate + (pMonths || ' months')::interval)::timestamp;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_months(timestamp without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_months(timestamp without time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pDate   ALIAS FOR $1;
  pMonths ALIAS FOR $2;
BEGIN
  RETURN date_add_months(pDate::timestamp with time zone, pMonths);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_months(date, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_months(date, integer) RETURNS date
    AS $_$
DECLARE
  pDate   ALIAS FOR $1;
  pMonths ALIAS FOR $2;
BEGIN
  RETURN date_add_months(pDate::timestamp with time zone, pMonths)::date;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_years(timestamp with time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_years(timestamp with time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pDate  ALIAS FOR $1;
  pYears ALIAS FOR $2;
BEGIN
  RETURN (pDate + (pYears || ' years')::interval)::timestamp;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_years(timestamp without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_years(timestamp without time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pDate  ALIAS FOR $1;
  pYears ALIAS FOR $2;
BEGIN
  RETURN date_add_years(pDate::timestamp with time zone, pYears);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_add_years(date, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_add_years(date, integer) RETURNS date
    AS $_$
DECLARE
  pDate  ALIAS FOR $1;
  pYears ALIAS FOR $2;
BEGIN
  RETURN date_add_years(pDate::timestamp with time zone, pYears)::date;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_days(timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_days(timestamp with time zone, timestamp with time zone) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
  vInterval  interval;
BEGIN
  vInterval := DATE_TRUNC('day', pEndDate) - DATE_TRUNC('day', pStartDate);
  RETURN EXTRACT('day' FROM vInterval);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_days(timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_days(timestamp without time zone, timestamp without time zone) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
BEGIN
  RETURN  to_days(pEndDate) - to_days(pStartDate);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_days(date, date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_days(date, date) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
BEGIN
  RETURN  to_days(pEndDate) - to_days(pStartDate);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_months(timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_months(timestamp with time zone, timestamp with time zone) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
  vInterval  interval;
BEGIN
  vInterval := AGE(pEndDate, pStartDate);
  RETURN EXTRACT('month' FROM vInterval) + (12 * EXTRACT('year' FROM vInterval));
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_months(timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_months(timestamp without time zone, timestamp without time zone) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
BEGIN
  RETURN date_diff_months(pStartDate::timestamp with time zone, pEndDate::timestamp with time zone);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_months(date, date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_months(date, date) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
BEGIN
  RETURN date_diff_months(pStartDate::timestamp with time zone, pEndDate::timestamp with time zone);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_years(timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_years(timestamp with time zone, timestamp with time zone) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
BEGIN
  RETURN EXTRACT('year' FROM AGE(DATE_TRUNC('month', pEndDate), DATE_TRUNC('month', pStartDate)));
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_years(timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_years(timestamp without time zone, timestamp without time zone) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
BEGIN
  RETURN date_diff_years(pStartDate::timestamp with time zone, pEndDate::timestamp with time zone);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: date_diff_years(date, date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION date_diff_years(date, date) RETURNS integer
    AS $_$
DECLARE
  pStartDate ALIAS FOR $1;
  pEndDate   ALIAS FOR $2;
BEGIN
  RETURN date_diff_years(pStartDate::timestamp with time zone, pEndDate::timestamp with time zone);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: dayofmonth(timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dayofmonth(timestamp without time zone) RETURNS integer
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
BEGIN
  RETURN EXTRACT('day' FROM pDate);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: dayofmonth(timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dayofmonth(timestamp with time zone) RETURNS integer
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
BEGIN
  RETURN EXTRACT('day' FROM pDate);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: dayofmonth(date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION dayofmonth(date) RETURNS integer
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
BEGIN
  RETURN EXTRACT('day' FROM pDate);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: getmonth(timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION getmonth(timestamp without time zone) RETURNS integer
    AS $_$
DECLARE
   pDate ALIAS FOR $1;
   vResult integer;
 BEGIN
   vResult := EXTRACT('month' FROM pDate);
   RETURN vResult;
 END;
$_$
    LANGUAGE plpgsql;


--
-- Name: getmonth(timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION getmonth(timestamp with time zone) RETURNS integer
    AS $_$
DECLARE
    pDate ALIAS FOR $1;
    vResult integer;
  BEGIN
    vResult := EXTRACT('month' FROM pDate);
    RETURN vResult;
  END;
$_$
    LANGUAGE plpgsql;


--
-- Name: getstkmoveloc(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION getstkmoveloc(integer) RETURNS text
    AS $_$
DECLARE
  pStockMoveID ALIAS FOR $1;
  pLocCode INTEGER;
BEGIN
	SELECT INTO pLocCode LocCode FROM StockMoves WHERE StockMoveNo = pStockMoveID;
	IF pLocCode ISNULL THEN
		RAISE EXCEPTION "StockNoveNo does not spec a valid LocCode.";
	ELSE
		RETURN pLocCode;
	END IF;
END;$_$
    LANGUAGE plpgsql;


--
-- Name: monthname(integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION monthname(integer) RETURNS text
    AS $_$
DECLARE
    pMonth ALIAS FOR $1;
    vResult text;
BEGIN
    vResult := CASE 
	WHEN pMonth = 1 THEN 'January'
	WHEN pMonth = 2 THEN 'February'
	WHEN pMonth = 3 THEN 'March'
	WHEN pMonth = 4 THEN 'April'
	WHEN pMonth = 5 THEN 'May'
	WHEN pMonth = 6 THEN 'June'
	WHEN pMonth = 7 THEN 'Jully'
	WHEN pMonth = 8 THEN 'August'
	WHEN pMonth = 9 THEN 'September'
	WHEN pMonth = 10 THEN 'October'
	WHEN pMonth = 11 THEN 'November'
	WHEN pMonth = 12 THEN 'December'
        WHEN (pMonth < 1) OR (pMonth > 12) THEN null
    END;
    RETURN vResult;
END;

$_$
    LANGUAGE plpgsql;


--
-- Name: monthname(date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION monthname(date) RETURNS text
    AS $_$
DECLARE
  vDate ALIAS FOR $1;
  vResult text;
BEGIN
  vResult := monthname(getmonth(vdate::timestamp));
  RETURN vResult;
END;

$_$
    LANGUAGE plpgsql;


--
-- Name: monthname(timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION monthname(timestamp with time zone) RETURNS text
    AS $_$
DECLARE
   vDate ALIAS FOR $1;
   vResult text;
 BEGIN
   vResult := monthname(getmonth(vdate));
   RETURN vResult;
 END;
 

$_$
    LANGUAGE plpgsql;


--
-- Name: plpgsql_call_handler(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION plpgsql_call_handler() RETURNS language_handler
    AS 'plpgsql.so', 'plpgsql_call_handler'
    LANGUAGE c;


--
-- Name: time_add_hours(timestamp with time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_add_hours(timestamp with time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pTime  ALIAS FOR $1;
  pHours ALIAS FOR $2;
BEGIN
  RETURN (pTime + (pHours || ' hours')::interval)::timestamp ;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_add_hours(timestamp without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_add_hours(timestamp without time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pTime  ALIAS FOR $1;
  pHours ALIAS FOR $2;
BEGIN
  RETURN time_add_hours(pTime::timestamp with time zone, pHours);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_add_hours(time without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_add_hours(time without time zone, integer) RETURNS time without time zone
    AS $_$
DECLARE
  pTime  ALIAS FOR $1;
  pHours ALIAS FOR $2;
BEGIN
  RETURN (pTime + (pHours || ' hours')::interval)::time;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_add_minutes(timestamp with time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_add_minutes(timestamp with time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pTime    ALIAS FOR $1;
  pMinutes ALIAS FOR $2;
BEGIN
  RETURN (pTime + (pMinutes || ' minutes')::interval)::timestamp;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_add_minutes(timestamp without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_add_minutes(timestamp without time zone, integer) RETURNS timestamp without time zone
    AS $_$
DECLARE
  pTime    ALIAS FOR $1;
  pMinutes ALIAS FOR $2;
BEGIN
  RETURN time_add_minutes(pTime::timestamp with time zone, pMinutes)::timestamp;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_add_minutes(time without time zone, integer); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_add_minutes(time without time zone, integer) RETURNS time without time zone
    AS $_$
DECLARE
  pTime    ALIAS FOR $1;
  pMinutes ALIAS FOR $2;
BEGIN
  RETURN (pTime + (pMinutes || ' minutes')::interval)::time;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_diff_hours(timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_diff_hours(timestamp with time zone, timestamp with time zone) RETURNS integer
    AS $_$
DECLARE
  pStartTime ALIAS FOR $1;
  pEndTime   ALIAS FOR $2;
  vDays      integer;
  vHours     integer;
BEGIN
  vDays  := EXTRACT('day'  FROM (DATE_TRUNC('day', pEndTime) - DATE_TRUNC('day', pStartTime)));
  vHours := EXTRACT('hour' FROM (pEndTime - pStartTime));
  RETURN (vDays * 24) + vHours;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_diff_hours(timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_diff_hours(timestamp without time zone, timestamp without time zone) RETURNS integer
    AS $_$
DECLARE
  pStartTime ALIAS FOR $1;
  pEndTime   ALIAS FOR $2;
BEGIN
  RETURN time_diff_hours(pStartTime::timestamp with time zone, pEndTime::timestamp with time zone);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_diff_hours(time without time zone, time without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_diff_hours(time without time zone, time without time zone) RETURNS integer
    AS $_$
DECLARE
  pStartTime ALIAS FOR $1;
  pEndTime   ALIAS FOR $2;
BEGIN
  RETURN EXTRACT('hour' FROM (pEndTime - pStartTime));
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_diff_minutes(timestamp with time zone, timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_diff_minutes(timestamp with time zone, timestamp with time zone) RETURNS integer
    AS $_$
DECLARE
  pStartTime ALIAS FOR $1;
  pEndTime   ALIAS FOR $2;
  vHours     integer;
  vMinutes   integer;
BEGIN
  vHours   := time_diff_hours(pStartTime, pEndTime);
  vMinutes := EXTRACT('minute' FROM AGE(pEndTime, pStartTime));
  RETURN (vHours * 60) + vMinutes;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_diff_minutes(timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_diff_minutes(timestamp without time zone, timestamp without time zone) RETURNS integer
    AS $_$
DECLARE
  pStartTime ALIAS FOR $1;
  pEndTime   ALIAS FOR $2;
BEGIN
  RETURN time_diff_minutes(pStartTime::timestamp with time zone, pEndTime::timestamp with time zone);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: time_diff_minutes(time without time zone, time without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION time_diff_minutes(time without time zone, time without time zone) RETURNS integer
    AS $_$
DECLARE
  pStartTime ALIAS FOR $1;
  pEndTime   ALIAS FOR $2;
  vHours     integer;
  vMinutes   integer;
BEGIN
  vHours   := EXTRACT('hour' FROM (pEndTime - pStartTime));
  vMinutes := EXTRACT('minute' FROM (pEndTime - pStartTime));
  RETURN (vHours * 60) + vMinutes;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: to_days(timestamp without time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION to_days(timestamp without time zone) RETURNS integer
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
BEGIN
  RETURN to_days(pDate::timestamp with time zone);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: to_days(timestamp with time zone); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION to_days(timestamp with time zone) RETURNS integer
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
  vDays interval;
  vResult integer;
BEGIN
  vDays := (DATE_TRUNC('day', pDate) - DATE_TRUNC('day', '0000-01-01'::timestamp));
  vResult := EXTRACT('day' FROM vDays);
  RETURN vResult;
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: to_days(date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION to_days(date) RETURNS integer
    AS $_$
DECLARE
  pDate ALIAS FOR $1;
BEGIN
  RETURN to_days(pDate::timestamp);
END;
$_$
    LANGUAGE plpgsql;


--
-- Name: year(date); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION "year"(date) RETURNS integer
    AS $_$
DECLARE
    pDate ALIAS FOR $1;
    vResult integer;
  BEGIN
    vResult := EXTRACT('year' FROM pDate);
    RETURN vResult;
  END;
$_$
    LANGUAGE plpgsql;


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: accountgroups; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE accountgroups (
    groupname text DEFAULT ''::text NOT NULL,
    sectioninaccounts integer DEFAULT 0 NOT NULL,
    pandl integer DEFAULT 1 NOT NULL,
    sequenceintb integer DEFAULT 0 NOT NULL
);


--
-- Name: accountsection; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE accountsection (
    sectionid integer NOT NULL,
    sectionname text NOT NULL
);


--
-- Name: areas; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE areas (
    areacode text DEFAULT ''::text NOT NULL,
    areadescription text DEFAULT ''::text NOT NULL
);


--
-- Name: bankaccounts; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE bankaccounts (
    accountcode integer DEFAULT 0 NOT NULL,
    bankaccountname text DEFAULT ''::text NOT NULL,
    bankaccountnumber text DEFAULT ''::text NOT NULL,
    bankaddress text
);


--
-- Name: banktrans; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE banktrans (
    banktransid serial NOT NULL,
    "type" integer DEFAULT 0 NOT NULL,
    transno bigint DEFAULT (0)::bigint NOT NULL,
    bankact integer DEFAULT 0 NOT NULL,
    ref text DEFAULT ''::text NOT NULL,
    amountcleared double precision DEFAULT (0)::double precision NOT NULL,
    exrate double precision DEFAULT (1)::double precision NOT NULL,
    transdate date,
    banktranstype text DEFAULT ''::text NOT NULL,
    amount double precision DEFAULT (0)::double precision NOT NULL,
    currcode text DEFAULT ''::text NOT NULL
);


--
-- Name: bom; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE bom (
    parent text DEFAULT ''::text NOT NULL,
    component text DEFAULT ''::text NOT NULL,
    workcentreadded text DEFAULT ''::text NOT NULL,
    loccode text DEFAULT ''::text NOT NULL,
    effectiveafter date,
    effectiveto date DEFAULT '9999-12-31'::date NOT NULL,
    quantity numeric(16,4) DEFAULT 1.0000 NOT NULL
);


--
-- Name: chartdetails; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE chartdetails (
    accountcode integer DEFAULT 0 NOT NULL,
    period integer DEFAULT 0 NOT NULL,
    budget double precision DEFAULT (0)::double precision NOT NULL,
    actual double precision DEFAULT (0)::double precision NOT NULL,
    bfwd double precision DEFAULT (0)::double precision NOT NULL,
    bfwdbudget double precision DEFAULT (0)::double precision NOT NULL
);


--
-- Name: chartmaster; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE chartmaster (
    accountcode integer DEFAULT 0 NOT NULL,
    accountname text DEFAULT ''::text NOT NULL,
    group_ text DEFAULT ''::text NOT NULL
);


--
-- Name: cogsglpostings; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE cogsglpostings (
    id serial NOT NULL,
    area text DEFAULT ''::text NOT NULL,
    stkcat text DEFAULT ''::text NOT NULL,
    glcode integer DEFAULT 0 NOT NULL,
    salestype text DEFAULT 'AN'::text NOT NULL
);


--
-- Name: companies; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE companies (
    coycode integer DEFAULT 1 NOT NULL,
    coyname text DEFAULT ''::text NOT NULL,
    gstno text DEFAULT ''::text NOT NULL,
    companynumber text DEFAULT '0'::text NOT NULL,
    regoffice1 text DEFAULT ''::text NOT NULL,
    regoffice2 text DEFAULT ''::text NOT NULL,
    regoffice3 text DEFAULT ''::text NOT NULL,
    regoffice4 text DEFAULT ''::text NOT NULL,
    telephone text DEFAULT ''::text NOT NULL,
    fax text DEFAULT ''::text NOT NULL,
    email text DEFAULT ''::text NOT NULL,
    currencydefault text DEFAULT ''::text NOT NULL,
    debtorsact integer DEFAULT 70000 NOT NULL,
    pytdiscountact integer DEFAULT 55000 NOT NULL,
    creditorsact integer DEFAULT 80000 NOT NULL,
    payrollact integer DEFAULT 84000 NOT NULL,
    grnact integer DEFAULT 72000 NOT NULL,
    exchangediffact integer DEFAULT 65000 NOT NULL,
    purchasesexchangediffact integer DEFAULT 0 NOT NULL,
    retainedearnings integer DEFAULT 90000 NOT NULL,
    gllink_debtors integer DEFAULT 1,
    gllink_creditors integer DEFAULT 1,
    gllink_stock integer DEFAULT 1,
    freightact integer DEFAULT 0 NOT NULL,
    regoffice5 character varying(20) DEFAULT ''::text,
    regoffice6 character varying(15) DEFAULT ''::text
);


--
-- Name: config; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE config (
    confname text NOT NULL,
    confvalue text NOT NULL
);


--
-- Name: contractbom; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE contractbom (
    contractref text DEFAULT ''::text NOT NULL,
    component text DEFAULT ''::text NOT NULL,
    workcentreadded text DEFAULT ''::text NOT NULL,
    loccode text DEFAULT ''::text NOT NULL,
    quantity numeric(16,4) DEFAULT 1.0000 NOT NULL
);


--
-- Name: contractreqts; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE contractreqts (
    contractreqid serial NOT NULL,
    contract text DEFAULT ''::text NOT NULL,
    component text DEFAULT ''::text NOT NULL,
    quantity numeric(16,4) DEFAULT 1.0000 NOT NULL,
    priceperunit numeric(20,4) DEFAULT 0.0000 NOT NULL
);


--
-- Name: contracts; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE contracts (
    contractref text DEFAULT ''::text NOT NULL,
    contractdescription text DEFAULT ''::text NOT NULL,
    debtorno text DEFAULT ''::text NOT NULL,
    branchcode text DEFAULT ''::text NOT NULL,
    status text DEFAULT 'Quotation'::text NOT NULL,
    categoryid text DEFAULT ''::text NOT NULL,
    typeabbrev text DEFAULT ''::text NOT NULL,
    orderno integer DEFAULT 0 NOT NULL,
    quotedpricefx numeric(20,4) DEFAULT 0.0000 NOT NULL,
    margin numeric(16,4) DEFAULT 1.0000 NOT NULL,
    woref text DEFAULT ''::text NOT NULL,
    requireddate timestamp without time zone,
    canceldate timestamp without time zone,
    quantityreqd numeric(16,4) DEFAULT 1.0000 NOT NULL,
    specifications pgblob NOT NULL,
    datequoted timestamp without time zone,
    units text DEFAULT 'Each'::text NOT NULL,
    drawing pgblob NOT NULL,
    rate numeric(16,4) DEFAULT 1.0000 NOT NULL
);


--
-- Name: currencies; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE currencies (
    currency text DEFAULT ''::text NOT NULL,
    currabrev text DEFAULT ''::text NOT NULL,
    country text DEFAULT ''::text NOT NULL,
    hundredsname text DEFAULT 'Cents'::text NOT NULL,
    rate numeric(16,4) DEFAULT 1.0000 NOT NULL
);


--
-- Name: custallocns; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE custallocns (
    id serial NOT NULL,
    amt numeric(20,4) DEFAULT 0.0000 NOT NULL,
    datealloc date,
    transid_allocfrom integer DEFAULT 0 NOT NULL,
    transid_allocto integer DEFAULT 0 NOT NULL
);


--
-- Name: custbranch; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE custbranch (
    branchcode text DEFAULT ''::text NOT NULL,
    debtorno text DEFAULT ''::text NOT NULL,
    brname text DEFAULT ''::text NOT NULL,
    braddress1 text DEFAULT ''::text NOT NULL,
    braddress2 text DEFAULT ''::text NOT NULL,
    braddress3 text DEFAULT ''::text NOT NULL,
    braddress4 text DEFAULT ''::text NOT NULL,
    estdeliverydays integer DEFAULT 1 NOT NULL,
    area text DEFAULT ''::text NOT NULL,
    salesman text DEFAULT ''::text NOT NULL,
    fwddate integer DEFAULT 0 NOT NULL,
    phoneno text DEFAULT ''::text NOT NULL,
    faxno text DEFAULT ''::text NOT NULL,
    contactname text DEFAULT ''::text NOT NULL,
    email text DEFAULT ''::text NOT NULL,
    defaultlocation text DEFAULT ''::text NOT NULL,
    taxgroupid integer DEFAULT 1 NOT NULL,
    defaultshipvia integer DEFAULT 1 NOT NULL,
    disabletrans integer DEFAULT 0 NOT NULL,
    brpostaddr1 text DEFAULT ''::text NOT NULL,
    brpostaddr2 text DEFAULT ''::text NOT NULL,
    brpostaddr3 text DEFAULT ''::text NOT NULL,
    brpostaddr4 text DEFAULT ''::text NOT NULL,
    custbranchcode text DEFAULT ''::text NOT NULL,
    deliverblind integer DEFAULT 1,
    braddress5 character varying(20) DEFAULT ''::text NOT NULL,
    braddress6 character varying(15) DEFAULT ''::text NOT NULL,
    brpostaddr5 character varying(20) DEFAULT ''::text NOT NULL,
    brpostaddr6 character varying(15) DEFAULT ''::text NOT NULL
);


--
-- Name: debtorsmaster; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE debtorsmaster (
    debtorno text DEFAULT ''::text NOT NULL,
    name text DEFAULT ''::text NOT NULL,
    address1 text DEFAULT ''::text NOT NULL,
    address2 text DEFAULT ''::text NOT NULL,
    address3 text DEFAULT ''::text NOT NULL,
    address4 text DEFAULT ''::text NOT NULL,
    currcode text DEFAULT ''::text NOT NULL,
    salestype text DEFAULT ''::text NOT NULL,
    clientsince timestamp without time zone,
    holdreason integer DEFAULT 0 NOT NULL,
    paymentterms text DEFAULT 'f'::text NOT NULL,
    discount numeric(16,4) DEFAULT 0.0000 NOT NULL,
    pymtdiscount numeric(16,4) DEFAULT 0.0000 NOT NULL,
    lastpaid numeric(16,4) DEFAULT 0.0000 NOT NULL,
    lastpaiddate timestamp without time zone,
    creditlimit double precision DEFAULT (1000)::double precision NOT NULL,
    invaddrbranch integer DEFAULT 0 NOT NULL,
    discountcode text DEFAULT ''::text NOT NULL,
    ediinvoices integer DEFAULT 0 NOT NULL,
    ediorders integer DEFAULT 0 NOT NULL,
    edireference text DEFAULT ''::text NOT NULL,
    editransport text DEFAULT 'email'::text NOT NULL,
    ediaddress text DEFAULT ''::text NOT NULL,
    ediserveruser text DEFAULT ''::text NOT NULL,
    ediserverpwd text DEFAULT ''::text NOT NULL,
    taxref text DEFAULT ''::text,
    address5 character varying(20) DEFAULT ''::text NOT NULL,
    address6 character varying(15) DEFAULT ''::text NOT NULL
);


--
-- Name: debtortrans; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE debtortrans (
    id serial NOT NULL,
    transno integer DEFAULT 0 NOT NULL,
    "type" integer DEFAULT 0 NOT NULL,
    debtorno text DEFAULT ''::text NOT NULL,
    branchcode text DEFAULT ''::text NOT NULL,
    trandate timestamp without time zone,
    prd integer DEFAULT 0 NOT NULL,
    settled integer DEFAULT 0 NOT NULL,
    reference text DEFAULT ''::text NOT NULL,
    tpe text DEFAULT ''::text NOT NULL,
    order_ integer DEFAULT 0 NOT NULL,
    rate numeric(16,6) DEFAULT 0.000000 NOT NULL,
    ovamount double precision DEFAULT (0)::double precision NOT NULL,
    ovgst double precision DEFAULT (0)::double precision NOT NULL,
    ovfreight double precision DEFAULT (0)::double precision NOT NULL,
    ovdiscount double precision DEFAULT (0)::double precision NOT NULL,
    diffonexch double precision DEFAULT (0)::double precision NOT NULL,
    alloc double precision DEFAULT (0)::double precision NOT NULL,
    invtext text,
    shipvia text DEFAULT ''::text NOT NULL,
    edisent integer DEFAULT 0 NOT NULL,
    consignment text DEFAULT ''::text NOT NULL
);


--
-- Name: debtortranstaxes; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE debtortranstaxes (
    debtortransid integer NOT NULL,
    taxauthid integer NOT NULL,
    taxamount double precision NOT NULL
);


--
-- Name: discountmatrix; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE discountmatrix (
    salestype text DEFAULT ''::text NOT NULL,
    discountcategory text DEFAULT ''::text NOT NULL,
    quantitybreak integer DEFAULT 1 NOT NULL,
    discountrate numeric(16,4) DEFAULT 0.0000 NOT NULL
);


--
-- Name: edi_orders_seg_groups; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE edi_orders_seg_groups (
    seggroupno integer DEFAULT 0 NOT NULL,
    maxoccur integer DEFAULT 0 NOT NULL,
    parentseggroup integer DEFAULT 0 NOT NULL
);


--
-- Name: edi_orders_segs; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE edi_orders_segs (
    id serial NOT NULL,
    segtag text DEFAULT ''::text NOT NULL,
    seggroup integer DEFAULT 0 NOT NULL,
    maxoccur integer DEFAULT 0 NOT NULL
);


--
-- Name: ediitemmapping; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE ediitemmapping (
    supporcust text DEFAULT ''::text NOT NULL,
    partnercode text DEFAULT ''::text NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    partnerstockid text DEFAULT ''::text NOT NULL
);


--
-- Name: edimessageformat; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE edimessageformat (
    id serial NOT NULL,
    partnercode text DEFAULT ''::text NOT NULL,
    messagetype text DEFAULT ''::text NOT NULL,
    section text DEFAULT ''::text NOT NULL,
    sequenceno integer DEFAULT 0 NOT NULL,
    linetext text DEFAULT ''::text NOT NULL
);


--
-- Name: freightcosts; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE freightcosts (
    shipcostfromid serial NOT NULL,
    locationfrom text DEFAULT ''::text NOT NULL,
    destination text DEFAULT ''::text NOT NULL,
    shipperid integer DEFAULT 0 NOT NULL,
    cubrate numeric(16,2) DEFAULT 0.00 NOT NULL,
    kgrate numeric(16,2) DEFAULT 0.00 NOT NULL,
    maxkgs numeric(16,2) DEFAULT 999999.00 NOT NULL,
    maxcub numeric(16,2) DEFAULT 999999.00 NOT NULL,
    fixedprice numeric(16,2) DEFAULT 0.00 NOT NULL,
    minimumchg numeric(16,2) DEFAULT 0.00 NOT NULL
);


--
-- Name: gltrans; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE gltrans (
    counterindex serial NOT NULL,
    "type" integer DEFAULT 0 NOT NULL,
    typeno bigint DEFAULT (1)::bigint NOT NULL,
    chequeno integer DEFAULT 0 NOT NULL,
    trandate date,
    periodno integer DEFAULT 0 NOT NULL,
    account integer DEFAULT 0 NOT NULL,
    narrative text DEFAULT ''::text NOT NULL,
    amount double precision DEFAULT (0)::double precision NOT NULL,
    posted integer DEFAULT 0 NOT NULL,
    jobref text DEFAULT ''::text NOT NULL
);


--
-- Name: grns; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE grns (
    grnbatch integer DEFAULT 0 NOT NULL,
    grnno serial NOT NULL,
    podetailitem integer DEFAULT 0 NOT NULL,
    itemcode text DEFAULT ''::text NOT NULL,
    deliverydate date,
    itemdescription text DEFAULT ''::text NOT NULL,
    qtyrecd numeric(16,4) DEFAULT 0.0000 NOT NULL,
    quantityinv numeric(16,4) DEFAULT 0.0000 NOT NULL,
    supplierid text DEFAULT ''::text NOT NULL
);


--
-- Name: holdreasons; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE holdreasons (
    reasoncode integer DEFAULT 1 NOT NULL,
    reasondescription text DEFAULT ''::text NOT NULL,
    dissallowinvoices integer DEFAULT -1 NOT NULL
);


--
-- Name: locations; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE locations (
    loccode text DEFAULT ''::text NOT NULL,
    locationname text DEFAULT ''::text NOT NULL,
    deladd1 text DEFAULT ''::text NOT NULL,
    deladd2 text DEFAULT ''::text NOT NULL,
    deladd3 text DEFAULT ''::text NOT NULL,
    tel text DEFAULT ''::text NOT NULL,
    fax text DEFAULT ''::text NOT NULL,
    email text DEFAULT ''::text NOT NULL,
    contact text DEFAULT ''::text NOT NULL,
    taxprovinceid integer DEFAULT 1 NOT NULL,
    managed integer DEFAULT 0,
    deladd4 character varying(40) DEFAULT ''::text,
    deladd5 character varying(20) DEFAULT ''::text,
    deladd6 character varying(15) DEFAULT ''::text
);


--
-- Name: locstock; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE locstock (
    loccode text DEFAULT ''::text NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    quantity numeric(16,1) DEFAULT 0.0 NOT NULL,
    reorderlevel bigint DEFAULT (0)::bigint NOT NULL
);


--
-- Name: loctransfers; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE loctransfers (
    reference integer DEFAULT 0 NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    shipqty integer DEFAULT 0 NOT NULL,
    recqty integer DEFAULT 0 NOT NULL,
    shipdate date,
    recdate date,
    shiploc text DEFAULT ''::text NOT NULL,
    recloc text DEFAULT ''::text NOT NULL
);


--
-- Name: orderdeliverydifferenceslog; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE orderdeliverydifferenceslog (
    orderno integer DEFAULT 0 NOT NULL,
    invoiceno integer DEFAULT 0 NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    quantitydiff numeric(16,4) DEFAULT 0.0000 NOT NULL,
    debtorno text DEFAULT ''::text NOT NULL,
    branch text DEFAULT ''::text NOT NULL,
    can_or_bo text DEFAULT 'CAN'::text NOT NULL
);


--
-- Name: paymentmethods; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE paymentmethods (
    paymentid serial NOT NULL,
    paymentname text NOT NULL,
    paymenttype integer DEFAULT 1 NOT NULL,
    receipttype integer DEFAULT 1 NOT NULL
);


--
-- Name: paymentterms; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE paymentterms (
    termsindicator text DEFAULT ''::text NOT NULL,
    terms text DEFAULT ''::text NOT NULL,
    daysbeforedue integer DEFAULT 0 NOT NULL,
    dayinfollowingmonth integer DEFAULT 0 NOT NULL
);


--
-- Name: periods; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE periods (
    periodno integer DEFAULT 0 NOT NULL,
    lastdate_in_period date
);


--
-- Name: prices; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE prices (
    stockid text DEFAULT ''::text NOT NULL,
    typeabbrev text DEFAULT ''::text NOT NULL,
    currabrev text DEFAULT ''::text NOT NULL,
    debtorno text DEFAULT ''::text NOT NULL,
    price numeric(20,4) DEFAULT 0.0000 NOT NULL,
    branchcode text DEFAULT ''::text NOT NULL
);


--
-- Name: purchdata; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE purchdata (
    supplierno text DEFAULT ''::text NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    price numeric(20,4) DEFAULT 0.0000 NOT NULL,
    suppliersuom text DEFAULT ''::text NOT NULL,
    conversionfactor numeric(16,4) DEFAULT 1.0000 NOT NULL,
    supplierdescription text DEFAULT ''::text NOT NULL,
    leadtime integer DEFAULT 1 NOT NULL,
    preferred integer DEFAULT 0 NOT NULL
);


--
-- Name: purchorderdetails; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE purchorderdetails (
    podetailitem serial NOT NULL,
    orderno integer DEFAULT 0 NOT NULL,
    itemcode text DEFAULT ''::text NOT NULL,
    deliverydate date,
    itemdescription text DEFAULT ''::text NOT NULL,
    glcode integer DEFAULT 0 NOT NULL,
    qtyinvoiced numeric(16,4) DEFAULT 0.0000 NOT NULL,
    unitprice numeric(16,4) DEFAULT 0.0000 NOT NULL,
    actprice numeric(16,4) DEFAULT 0.0000 NOT NULL,
    stdcostunit numeric(16,4) DEFAULT 0.0000 NOT NULL,
    quantityord numeric(16,4) DEFAULT 0.0000 NOT NULL,
    quantityrecd numeric(16,4) DEFAULT 0.0000 NOT NULL,
    shiptref integer DEFAULT 0 NOT NULL,
    jobref text DEFAULT ''::text,
    completed integer DEFAULT 0 NOT NULL
);


--
-- Name: purchorders; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE purchorders (
    orderno serial NOT NULL,
    supplierno text DEFAULT ''::text NOT NULL,
    comments pgblob,
    orddate timestamp without time zone,
    rate numeric(16,4) DEFAULT 1.0000 NOT NULL,
    dateprinted timestamp without time zone,
    allowprint integer DEFAULT 1 NOT NULL,
    initiator text,
    requisitionno text,
    intostocklocation text DEFAULT ''::text NOT NULL,
    deladd1 text DEFAULT ''::text NOT NULL,
    deladd2 text DEFAULT ''::text NOT NULL,
    deladd3 text DEFAULT ''::text NOT NULL,
    deladd4 text DEFAULT ''::text NOT NULL,
    deladd5 character varying(20) DEFAULT ''::text,
    deladd6 character varying(15) DEFAULT ''::text,
    contact character varying(30) DEFAULT ''::text
);


--
-- Name: recurringsalesorders; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE recurringsalesorders (
    recurrorderno serial NOT NULL,
    debtorno text DEFAULT ''::text NOT NULL,
    branchcode text DEFAULT ''::text NOT NULL,
    customerref text DEFAULT ''::text NOT NULL,
    buyername text,
    comments pgblob,
    orddate date,
    ordertype text DEFAULT ''::text NOT NULL,
    shipvia integer DEFAULT 0 NOT NULL,
    deladd1 text DEFAULT ''::text NOT NULL,
    deladd2 text DEFAULT ''::text NOT NULL,
    deladd3 text DEFAULT ''::text NOT NULL,
    deladd4 text,
    contactphone text,
    contactemail text,
    deliverto text DEFAULT ''::text NOT NULL,
    freightcost numeric(10,2) DEFAULT 0.00 NOT NULL,
    fromstkloc text DEFAULT ''::text NOT NULL,
    deliverydate date,
    lastrecurrence date DEFAULT now(),
    frequency integer DEFAULT 1 NOT NULL,
    stopdate date,
    autoinvoice integer DEFAULT 0 NOT NULL,
    deladd5 character varying(20) DEFAULT ''::text,
    deladd6 character varying(15) DEFAULT ''::text
);


--
-- Name: recurrsalesorderdetails; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE recurrsalesorderdetails (
    recurrorderno integer DEFAULT 0 NOT NULL,
    stkcode text DEFAULT ''::text NOT NULL,
    unitprice numeric(16,4) DEFAULT 0.0000 NOT NULL,
    quantity numeric(16,4) DEFAULT 0.0000 NOT NULL,
    discountpercent numeric(16,4) DEFAULT 0.0000 NOT NULL,
    narrative text NOT NULL
);


--
-- Name: reportcolumns; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE reportcolumns (
    reportid integer DEFAULT 0 NOT NULL,
    colno integer DEFAULT 0 NOT NULL,
    heading1 text DEFAULT ''::text NOT NULL,
    heading2 text,
    calculation integer DEFAULT 0 NOT NULL,
    periodfrom integer,
    periodto integer,
    datatype text,
    colnumerator integer,
    coldenominator integer,
    calcoperator text,
    budgetoractual integer DEFAULT 0 NOT NULL,
    valformat text DEFAULT 'N'::text NOT NULL,
    constant double precision DEFAULT (0)::double precision NOT NULL
);


--
-- Name: reportfields; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE reportfields (
    id serial NOT NULL,
    reportid integer DEFAULT 0 NOT NULL,
    entrytype character varying(15) DEFAULT ''::character varying NOT NULL,
    seqnum integer DEFAULT 0 NOT NULL,
    fieldname character varying(35) DEFAULT ''::character varying NOT NULL,
    displaydesc character varying(25) DEFAULT ''::character varying NOT NULL,
    visible character(1) DEFAULT '1'::bpchar NOT NULL,
    columnbreak character(1) DEFAULT '1'::bpchar NOT NULL,
    params text
);


--
-- Name: reportheaders; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE reportheaders (
    reportid serial NOT NULL,
    reportheading text DEFAULT ''::text NOT NULL,
    groupbydata1 text DEFAULT ''::text NOT NULL,
    newpageafter1 integer DEFAULT 0 NOT NULL,
    lower1 text DEFAULT ''::text NOT NULL,
    upper1 text DEFAULT ''::text NOT NULL,
    groupbydata2 text,
    newpageafter2 integer DEFAULT 0 NOT NULL,
    lower2 text,
    upper2 text,
    groupbydata3 text,
    newpageafter3 integer DEFAULT 0 NOT NULL,
    lower3 text,
    upper3 text,
    groupbydata4 text DEFAULT ''::text NOT NULL,
    newpageafter4 integer DEFAULT 0 NOT NULL,
    upper4 text DEFAULT ''::text NOT NULL,
    lower4 text DEFAULT ''::text NOT NULL
);


--
-- Name: reportlinks; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE reportlinks (
    table1 character varying(25) DEFAULT ''::character varying NOT NULL,
    table2 character varying(25) DEFAULT ''::character varying NOT NULL,
    equation character varying(75) DEFAULT ''::character varying NOT NULL
);


--
-- Name: reports; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE reports (
    id serial NOT NULL,
    reportname text DEFAULT ''::text NOT NULL,
    reporttype text DEFAULT 'rpt'::text NOT NULL,
    groupname text DEFAULT 'misc'::text NOT NULL,
    defaultreport character(1) DEFAULT '0'::bpchar NOT NULL,
    papersize text DEFAULT 'A4,210,297'::text NOT NULL,
    paperorientation character(1) DEFAULT 'P'::bpchar NOT NULL,
    margintop integer DEFAULT 10 NOT NULL,
    marginbottom integer DEFAULT 10 NOT NULL,
    marginleft integer DEFAULT 10 NOT NULL,
    marginright integer DEFAULT 10 NOT NULL,
    coynamefont text DEFAULT 'Helvetica'::text NOT NULL,
    coynamefontsize integer DEFAULT 12 NOT NULL,
    coynamefontcolor text DEFAULT '0,0,0'::text NOT NULL,
    coynamealign character(1) DEFAULT 'C'::bpchar NOT NULL,
    coynameshow character(1) DEFAULT '1'::bpchar NOT NULL,
    title1desc text DEFAULT '%reportname%'::text NOT NULL,
    title1font text DEFAULT 'Helvetica'::text NOT NULL,
    title1fontsize integer DEFAULT 10 NOT NULL,
    title1fontcolor text DEFAULT '0,0,0'::text NOT NULL,
    title1fontalign character(1) DEFAULT 'C'::bpchar NOT NULL,
    title1show character(1) DEFAULT '1'::bpchar NOT NULL,
    title2desc text DEFAULT 'Report Generated %date%'::text NOT NULL,
    title2font text DEFAULT 'Helvetica'::text NOT NULL,
    title2fontsize integer DEFAULT 10 NOT NULL,
    title2fontcolor text DEFAULT '0,0,0'::text NOT NULL,
    title2fontalign character(1) DEFAULT 'C'::bpchar NOT NULL,
    title2show character(1) DEFAULT '1'::bpchar NOT NULL,
    filterfont text DEFAULT 'Helvetica'::text NOT NULL,
    filterfontsize integer DEFAULT 8 NOT NULL,
    filterfontcolor text DEFAULT '0,0,0'::text NOT NULL,
    filterfontalign character(1) DEFAULT 'L'::bpchar NOT NULL,
    datafont text DEFAULT 'Helvetica'::text NOT NULL,
    datafontsize integer DEFAULT 10 NOT NULL,
    datafontcolor text DEFAULT 'black'::text NOT NULL,
    datafontalign character(1) DEFAULT 'L'::bpchar NOT NULL,
    totalsfont text DEFAULT 'Helvetica'::text NOT NULL,
    totalsfontsize integer DEFAULT 10 NOT NULL,
    totalsfontcolor text DEFAULT '0,0,0'::text NOT NULL,
    totalsfontalign character(1) DEFAULT 'L'::bpchar NOT NULL,
    col1width integer DEFAULT 25 NOT NULL,
    col2width integer DEFAULT 25 NOT NULL,
    col3width integer DEFAULT 25 NOT NULL,
    col4width integer DEFAULT 25 NOT NULL,
    col5width integer DEFAULT 25 NOT NULL,
    col6width integer DEFAULT 25 NOT NULL,
    col7width integer DEFAULT 25 NOT NULL,
    col8width integer DEFAULT 25 NOT NULL,
    table1 text DEFAULT ''::text NOT NULL,
    table2 text,
    table2criteria text,
    table3 text,
    table3criteria text,
    table4 text,
    table4criteria text,
    table5 text,
    table5criteria text,
    table6 text,
    table6criteria text
);


--
-- Name: salesanalysis; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE salesanalysis (
    typeabbrev text DEFAULT ''::text NOT NULL,
    periodno integer DEFAULT 0 NOT NULL,
    amt numeric(16,4) DEFAULT 0.0000 NOT NULL,
    cost numeric(16,4) DEFAULT 0.0000 NOT NULL,
    cust text DEFAULT ''::text NOT NULL,
    custbranch text DEFAULT ''::text NOT NULL,
    qty numeric(16,4) DEFAULT 0.0000 NOT NULL,
    disc numeric(16,4) DEFAULT 0.0000 NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    area text DEFAULT ''::text NOT NULL,
    budgetoractual integer DEFAULT 0 NOT NULL,
    salesperson text DEFAULT ''::text NOT NULL,
    stkcategory text DEFAULT ''::text NOT NULL,
    id serial NOT NULL
);


--
-- Name: salescat; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE salescat (
    salescatid serial NOT NULL,
    parentcatid integer,
    salescatname text
);


--
-- Name: salescatprod; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE salescatprod (
    salescatid integer,
    stockid text NOT NULL
);


--
-- Name: salesglpostings; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE salesglpostings (
    id serial NOT NULL,
    area text DEFAULT ''::text NOT NULL,
    stkcat text DEFAULT ''::text NOT NULL,
    discountglcode integer DEFAULT 0 NOT NULL,
    salesglcode integer DEFAULT 0 NOT NULL,
    salestype text DEFAULT 'AN'::text NOT NULL
);


--
-- Name: salesman; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE salesman (
    salesmancode text DEFAULT ''::text NOT NULL,
    salesmanname text DEFAULT ''::text NOT NULL,
    smantel text DEFAULT ''::text NOT NULL,
    smanfax text DEFAULT ''::text NOT NULL,
    commissionrate1 numeric(16,4) DEFAULT 0.0000 NOT NULL,
    breakpoint numeric(20,4) DEFAULT 0.0000 NOT NULL,
    commissionrate2 numeric(16,4) DEFAULT 0.0000 NOT NULL
);


--
-- Name: salesorderdetails; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE salesorderdetails (
    orderno integer DEFAULT 0 NOT NULL,
    stkcode text DEFAULT ''::text NOT NULL,
    qtyinvoiced numeric(16,4) DEFAULT 0.0000 NOT NULL,
    unitprice numeric(16,4) DEFAULT 0.0000 NOT NULL,
    quantity numeric(16,4) DEFAULT 0.0000 NOT NULL,
    estimate integer DEFAULT 0 NOT NULL,
    discountpercent numeric(16,4) DEFAULT 0.0000 NOT NULL,
    actualdispatchdate timestamp without time zone,
    completed integer DEFAULT 0 NOT NULL,
    narrative text NOT NULL,
    orderlineno integer
);


--
-- Name: salesorders; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE salesorders (
    orderno serial NOT NULL,
    debtorno text DEFAULT ''::text NOT NULL,
    branchcode text DEFAULT ''::text NOT NULL,
    customerref text DEFAULT ''::text NOT NULL,
    buyername text,
    comments pgblob,
    orddate date,
    ordertype text DEFAULT ''::text NOT NULL,
    shipvia integer DEFAULT 0 NOT NULL,
    deladd1 text DEFAULT ''::text NOT NULL,
    deladd2 text DEFAULT ''::text NOT NULL,
    deladd3 text DEFAULT ''::text NOT NULL,
    deladd4 text,
    contactphone text,
    contactemail text,
    deliverto text DEFAULT ''::text NOT NULL,
    freightcost numeric(10,2) DEFAULT 0.00 NOT NULL,
    fromstkloc text DEFAULT ''::text NOT NULL,
    deliverydate date,
    printedpackingslip integer DEFAULT 0 NOT NULL,
    datepackingslipprinted date,
    quotation integer DEFAULT 0,
    deliverblind integer DEFAULT 1,
    deladd5 character varying(20) DEFAULT ''::text,
    deladd6 character varying(20) DEFAULT ''::text
);


--
-- Name: salestypes; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE salestypes (
    typeabbrev text DEFAULT ''::text NOT NULL,
    sales_type text DEFAULT ''::text NOT NULL
);


--
-- Name: scripts_id_seq; Type: SEQUENCE; Schema: public; Owner: weberp_db_user
--

CREATE SEQUENCE scripts_id_seq
    START WITH 0
    INCREMENT BY 1
    MAXVALUE 999999
    MINVALUE 0
    CACHE 1;


--
-- Name: securitygroups; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE securitygroups (
    secroleid integer NOT NULL,
    tokenid integer NOT NULL
);


--
-- Name: securityroles; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE securityroles (
    secroleid serial NOT NULL,
    secrolename text NOT NULL
);


--
-- Name: securitytokens; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE securitytokens (
    tokenid integer NOT NULL,
    tokenname text NOT NULL
);


--
-- Name: shipmentcharges; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE shipmentcharges (
    shiptchgid serial NOT NULL,
    shiptref integer DEFAULT 0 NOT NULL,
    transtype integer DEFAULT 0 NOT NULL,
    transno integer DEFAULT 0 NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    value double precision DEFAULT (0)::double precision NOT NULL
);


--
-- Name: shipments; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE shipments (
    shiptref integer DEFAULT 0 NOT NULL,
    voyageref text DEFAULT '0'::text NOT NULL,
    vessel text DEFAULT ''::text NOT NULL,
    eta timestamp without time zone,
    accumvalue numeric(16,4) DEFAULT 0.0000 NOT NULL,
    supplierid text DEFAULT ''::text NOT NULL,
    closed integer DEFAULT 0 NOT NULL
);


--
-- Name: shippers; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE shippers (
    shipper_id serial NOT NULL,
    shippername text DEFAULT ''::text NOT NULL,
    mincharge numeric(16,4) DEFAULT 0.0000 NOT NULL
);


--
-- Name: stockcategory; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE stockcategory (
    categoryid text DEFAULT ''::text NOT NULL,
    categorydescription text DEFAULT ''::text NOT NULL,
    stocktype text DEFAULT 'F'::text NOT NULL,
    stockact integer DEFAULT 0 NOT NULL,
    adjglact integer DEFAULT 0 NOT NULL,
    purchpricevaract integer DEFAULT 80000 NOT NULL,
    materialuseagevarac integer DEFAULT 80000 NOT NULL,
    wipact integer DEFAULT 0 NOT NULL
);


--
-- Name: stockcheckfreeze; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE stockcheckfreeze (
    stockid text DEFAULT ''::text NOT NULL,
    loccode text DEFAULT ''::text NOT NULL,
    qoh double precision DEFAULT (0)::double precision NOT NULL
);


--
-- Name: stockcounts; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE stockcounts (
    id serial NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    loccode text DEFAULT ''::text NOT NULL,
    qtycounted double precision DEFAULT (0)::double precision NOT NULL,
    reference text DEFAULT ''::text NOT NULL
);


--
-- Name: stockmaster; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE stockmaster (
    stockid text DEFAULT ''::text NOT NULL,
    categoryid text DEFAULT ''::text NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    longdescription text NOT NULL,
    units text DEFAULT 'each'::text NOT NULL,
    mbflag text DEFAULT 'B'::text NOT NULL,
    lastcurcostdate date DEFAULT '1800-01-01'::date NOT NULL,
    actualcost numeric(20,4) DEFAULT 0.0000 NOT NULL,
    lastcost numeric(20,4) DEFAULT 0.0000 NOT NULL,
    materialcost numeric(20,4) DEFAULT 0.0000 NOT NULL,
    labourcost numeric(20,4) DEFAULT 0.0000 NOT NULL,
    overheadcost numeric(20,4) DEFAULT 0.0000 NOT NULL,
    lowestlevel integer DEFAULT 0 NOT NULL,
    discontinued integer DEFAULT 0 NOT NULL,
    controlled integer DEFAULT 0 NOT NULL,
    eoq numeric(10,2) DEFAULT 0.00 NOT NULL,
    volume numeric(20,4) DEFAULT 0.0000 NOT NULL,
    kgs numeric(20,4) DEFAULT 0.0000 NOT NULL,
    barcode text DEFAULT ''::text NOT NULL,
    discountcategory text DEFAULT ''::text NOT NULL,
    taxcatid integer DEFAULT 1 NOT NULL,
    serialised integer DEFAULT 0 NOT NULL,
    decimalplaces integer DEFAULT 0 NOT NULL
);


--
-- Name: stockmoves; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE stockmoves (
    stkmoveno serial NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    "type" integer DEFAULT 0 NOT NULL,
    transno integer DEFAULT 0 NOT NULL,
    loccode text DEFAULT ''::text NOT NULL,
    trandate date,
    debtorno text DEFAULT ''::text NOT NULL,
    branchcode text DEFAULT ''::text NOT NULL,
    price numeric(20,4) DEFAULT 0.0000 NOT NULL,
    prd integer DEFAULT 0 NOT NULL,
    reference text DEFAULT ''::text NOT NULL,
    qty numeric(16,4) DEFAULT 1.0000 NOT NULL,
    discountpercent numeric(16,4) DEFAULT 0.0000 NOT NULL,
    standardcost numeric(16,4) DEFAULT 0.0000 NOT NULL,
    show_on_inv_crds integer DEFAULT 1 NOT NULL,
    newqoh double precision DEFAULT (0)::double precision NOT NULL,
    hidemovt integer DEFAULT 0 NOT NULL,
    narrative text DEFAULT ''::text NOT NULL
);


--
-- Name: stockmovestaxes; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE stockmovestaxes (
    stkmoveno integer NOT NULL,
    taxauthid integer NOT NULL,
    taxontax integer DEFAULT 0 NOT NULL,
    taxcalculationorder integer DEFAULT 0 NOT NULL,
    taxrate double precision DEFAULT 0 NOT NULL
);


--
-- Name: stockserialitems; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE stockserialitems (
    stockid text DEFAULT ''::text NOT NULL,
    loccode text DEFAULT ''::text NOT NULL,
    serialno text DEFAULT ''::text NOT NULL,
    quantity double precision DEFAULT (0)::double precision NOT NULL
);


--
-- Name: stockserialmoves; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE stockserialmoves (
    stkitmmoveno serial NOT NULL,
    stockmoveno integer DEFAULT 0 NOT NULL,
    stockid text DEFAULT ''::text NOT NULL,
    serialno text DEFAULT ''::text NOT NULL,
    moveqty double precision DEFAULT (0)::double precision NOT NULL
);


--
-- Name: suppallocs; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE suppallocs (
    id serial NOT NULL,
    amt numeric(20,2) DEFAULT 0.00 NOT NULL,
    datealloc date,
    transid_allocfrom integer DEFAULT 0 NOT NULL,
    transid_allocto integer DEFAULT 0 NOT NULL
);


--
-- Name: suppliercontacts; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE suppliercontacts (
    supplierid text DEFAULT ''::text NOT NULL,
    contact text DEFAULT ''::text NOT NULL,
    "position" text DEFAULT ''::text NOT NULL,
    tel text DEFAULT ''::text NOT NULL,
    fax text DEFAULT ''::text NOT NULL,
    mobile text DEFAULT ''::text NOT NULL,
    email text DEFAULT ''::text NOT NULL,
    ordercontact integer DEFAULT 0 NOT NULL
);


--
-- Name: suppliers; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE suppliers (
    supplierid text DEFAULT ''::text NOT NULL,
    suppname text DEFAULT ''::text NOT NULL,
    address1 text DEFAULT ''::text NOT NULL,
    address2 text DEFAULT ''::text NOT NULL,
    address3 text DEFAULT ''::text NOT NULL,
    address4 text DEFAULT ''::text NOT NULL,
    currcode text DEFAULT ''::text NOT NULL,
    suppliersince date,
    paymentterms text DEFAULT ''::text NOT NULL,
    lastpaid numeric(16,4) DEFAULT 0.0000 NOT NULL,
    lastpaiddate timestamp without time zone,
    bankact text DEFAULT ''::text NOT NULL,
    bankref text DEFAULT ''::text NOT NULL,
    bankpartics text DEFAULT ''::text NOT NULL,
    remittance integer DEFAULT 1 NOT NULL,
    taxgroupid integer DEFAULT 1 NOT NULL,
    address5 character varying(20) DEFAULT ''::text,
    address6 character varying(20) DEFAULT ''::text
);


--
-- Name: supptrans; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE supptrans (
    transno integer DEFAULT 0 NOT NULL,
    "type" integer DEFAULT 0 NOT NULL,
    supplierno text DEFAULT ''::text NOT NULL,
    suppreference text DEFAULT ''::text NOT NULL,
    trandate date,
    duedate date,
    settled integer DEFAULT 0 NOT NULL,
    rate numeric(16,6) DEFAULT 1.000000 NOT NULL,
    ovamount numeric(16,4) DEFAULT 0.0000 NOT NULL,
    ovgst numeric(16,4) DEFAULT 0.0000 NOT NULL,
    diffonexch numeric(16,4) DEFAULT 0.0000 NOT NULL,
    alloc numeric(16,4) DEFAULT 0.0000 NOT NULL,
    transtext pgblob,
    "hold" integer DEFAULT 0 NOT NULL,
    id serial NOT NULL
);


--
-- Name: supptranstaxes; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE supptranstaxes (
    supptransid integer NOT NULL,
    taxauthid integer NOT NULL,
    taxamount double precision NOT NULL
);


--
-- Name: systypes; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE systypes (
    typeid integer DEFAULT 0 NOT NULL,
    typename text DEFAULT ''::text NOT NULL,
    typeno integer DEFAULT 1 NOT NULL
);


--
-- Name: taxauthorities; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE taxauthorities (
    taxid serial NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    taxglcode integer DEFAULT 0 NOT NULL,
    purchtaxglaccount integer DEFAULT 0 NOT NULL,
    bank text,
    bankacctype text,
    bankacc text,
    bankswift text
);


--
-- Name: taxauthrates; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE taxauthrates (
    taxauthority integer DEFAULT 1 NOT NULL,
    dispatchtaxprovince integer DEFAULT 1 NOT NULL,
    taxcatid integer DEFAULT 0 NOT NULL,
    taxrate double precision DEFAULT (0)::double precision NOT NULL
);


--
-- Name: taxcategories; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE taxcategories (
    taxcatid serial NOT NULL,
    taxcatname character varying(30) NOT NULL
);


--
-- Name: taxgroups; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE taxgroups (
    taxgroupid serial NOT NULL,
    taxgroupdescription character varying(30) NOT NULL
);


--
-- Name: taxgrouptaxes; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE taxgrouptaxes (
    taxgroupid integer NOT NULL,
    taxauthid integer NOT NULL,
    calculationorder integer NOT NULL,
    taxontax integer DEFAULT 0 NOT NULL
);


--
-- Name: taxprovinces; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE taxprovinces (
    taxprovinceid serial NOT NULL,
    taxprovincename character varying(30) NOT NULL
);


--
-- Name: unitsofmeasure; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE unitsofmeasure (
    unitid serial NOT NULL,
    unitname text NOT NULL
);


--
-- Name: workcentres; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE workcentres (
    code text DEFAULT ''::text NOT NULL,
    "location" text DEFAULT ''::text NOT NULL,
    description text DEFAULT ''::text NOT NULL,
    capacity numeric(16,4) DEFAULT 1.0000 NOT NULL,
    overheadperhour numeric(20,4) DEFAULT 0.0000 NOT NULL,
    overheadrecoveryact integer DEFAULT 0 NOT NULL,
    setuphrs numeric(20,4) DEFAULT 0.0000 NOT NULL
);


--
-- Name: www_users; Type: TABLE; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE TABLE www_users (
    userid text DEFAULT ''::text NOT NULL,
    "password" text DEFAULT ''::text NOT NULL,
    realname text DEFAULT ''::text NOT NULL,
    customerid text DEFAULT ''::text NOT NULL,
    phone text DEFAULT ''::text NOT NULL,
    email text,
    defaultlocation text DEFAULT ''::text,
    fullaccess integer DEFAULT 1 NOT NULL,
    lastvisitdate timestamp without time zone,
    branchcode text DEFAULT ''::text NOT NULL,
    pagesize text DEFAULT 'A4'::text NOT NULL,
    modulesallowed text DEFAULT ''::text NOT NULL,
    blocked integer DEFAULT 0 NOT NULL,
    displayrecordsmax integer DEFAULT 0 NOT NULL,
    theme text DEFAULT 'fresh'::text NOT NULL,
    "language" text DEFAULT 'en_GB'::text NOT NULL
);


--
-- Name: accountgroups_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY accountgroups
    ADD CONSTRAINT accountgroups_pkey PRIMARY KEY (groupname);


--
-- Name: accountsection_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY accountsection
    ADD CONSTRAINT accountsection_pkey PRIMARY KEY (sectionid);


--
-- Name: areas_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY areas
    ADD CONSTRAINT areas_pkey PRIMARY KEY (areacode);


--
-- Name: bankaccounts_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY bankaccounts
    ADD CONSTRAINT bankaccounts_pkey PRIMARY KEY (accountcode);


--
-- Name: banktrans_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY banktrans
    ADD CONSTRAINT banktrans_pkey PRIMARY KEY (banktransid);


--
-- Name: bom_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY bom
    ADD CONSTRAINT bom_pkey PRIMARY KEY (parent, component, workcentreadded, loccode);


--
-- Name: chartdetails_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY chartdetails
    ADD CONSTRAINT chartdetails_pkey PRIMARY KEY (accountcode, period);


--
-- Name: chartmaster_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY chartmaster
    ADD CONSTRAINT chartmaster_pkey PRIMARY KEY (accountcode);


--
-- Name: cogsglpostings_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY cogsglpostings
    ADD CONSTRAINT cogsglpostings_pkey PRIMARY KEY (id);


--
-- Name: companies_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY companies
    ADD CONSTRAINT companies_pkey PRIMARY KEY (coycode);


--
-- Name: config_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY config
    ADD CONSTRAINT config_pkey PRIMARY KEY (confname);


--
-- Name: contractbom_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY contractbom
    ADD CONSTRAINT contractbom_pkey PRIMARY KEY (contractref, component, workcentreadded, loccode);


--
-- Name: contractreqts_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY contractreqts
    ADD CONSTRAINT contractreqts_pkey PRIMARY KEY (contractreqid);


--
-- Name: contracts_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY contracts
    ADD CONSTRAINT contracts_pkey PRIMARY KEY (contractref);


--
-- Name: currencies_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY currencies
    ADD CONSTRAINT currencies_pkey PRIMARY KEY (currabrev);


--
-- Name: custallocns_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY custallocns
    ADD CONSTRAINT custallocns_pkey PRIMARY KEY (id);


--
-- Name: custbranch_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY custbranch
    ADD CONSTRAINT custbranch_pkey PRIMARY KEY (branchcode, debtorno);


--
-- Name: debtorsmaster_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY debtorsmaster
    ADD CONSTRAINT debtorsmaster_pkey PRIMARY KEY (debtorno);


--
-- Name: debtortrans_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY debtortrans
    ADD CONSTRAINT debtortrans_pkey PRIMARY KEY (id);


--
-- Name: debtortranstaxes_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY debtortranstaxes
    ADD CONSTRAINT debtortranstaxes_pkey PRIMARY KEY (debtortransid, taxauthid);


--
-- Name: discountmatrix_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY discountmatrix
    ADD CONSTRAINT discountmatrix_pkey PRIMARY KEY (salestype, discountcategory, quantitybreak);


--
-- Name: edi_orders_seg_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY edi_orders_seg_groups
    ADD CONSTRAINT edi_orders_seg_groups_pkey PRIMARY KEY (seggroupno);


--
-- Name: edi_orders_segs_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY edi_orders_segs
    ADD CONSTRAINT edi_orders_segs_pkey PRIMARY KEY (id);


--
-- Name: ediitemmapping_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY ediitemmapping
    ADD CONSTRAINT ediitemmapping_pkey PRIMARY KEY (supporcust, partnercode, stockid);


--
-- Name: edimessageformat_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY edimessageformat
    ADD CONSTRAINT edimessageformat_pkey PRIMARY KEY (id);


--
-- Name: freightcosts_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY freightcosts
    ADD CONSTRAINT freightcosts_pkey PRIMARY KEY (shipcostfromid);


--
-- Name: gltrans_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY gltrans
    ADD CONSTRAINT gltrans_pkey PRIMARY KEY (counterindex);

ALTER TABLE gltrans CLUSTER ON gltrans_pkey;


--
-- Name: grns_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY grns
    ADD CONSTRAINT grns_pkey PRIMARY KEY (grnno);


--
-- Name: holdreasons_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY holdreasons
    ADD CONSTRAINT holdreasons_pkey PRIMARY KEY (reasoncode);


--
-- Name: locations_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY locations
    ADD CONSTRAINT locations_pkey PRIMARY KEY (loccode);


--
-- Name: locstock_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY locstock
    ADD CONSTRAINT locstock_pkey PRIMARY KEY (loccode, stockid);


--
-- Name: orderdeliverydifferenceslog_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY orderdeliverydifferenceslog
    ADD CONSTRAINT orderdeliverydifferenceslog_pkey PRIMARY KEY (orderno, invoiceno, stockid);


--
-- Name: paymentmethods_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY paymentmethods
    ADD CONSTRAINT paymentmethods_pkey PRIMARY KEY (paymentname);


--
-- Name: paymentterms_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY paymentterms
    ADD CONSTRAINT paymentterms_pkey PRIMARY KEY (termsindicator);


--
-- Name: periods_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY periods
    ADD CONSTRAINT periods_pkey PRIMARY KEY (periodno);


--
-- Name: prices_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY prices
    ADD CONSTRAINT prices_pkey PRIMARY KEY (stockid, typeabbrev, currabrev, debtorno);


--
-- Name: purchdata_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY purchdata
    ADD CONSTRAINT purchdata_pkey PRIMARY KEY (supplierno, stockid);


--
-- Name: purchorderdetails_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY purchorderdetails
    ADD CONSTRAINT purchorderdetails_pkey PRIMARY KEY (podetailitem);


--
-- Name: purchorders_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY purchorders
    ADD CONSTRAINT purchorders_pkey PRIMARY KEY (orderno);


--
-- Name: recurringsalesorders_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY recurringsalesorders
    ADD CONSTRAINT recurringsalesorders_pkey PRIMARY KEY (recurrorderno);


--
-- Name: recurrsalesorderdetails_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY recurrsalesorderdetails
    ADD CONSTRAINT recurrsalesorderdetails_pkey PRIMARY KEY (recurrorderno, stkcode);


--
-- Name: reportcolumns_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY reportcolumns
    ADD CONSTRAINT reportcolumns_pkey PRIMARY KEY (reportid, colno);


--
-- Name: reportfields_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY reportfields
    ADD CONSTRAINT reportfields_pkey PRIMARY KEY (id);


--
-- Name: reportheaders_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY reportheaders
    ADD CONSTRAINT reportheaders_pkey PRIMARY KEY (reportid);


--
-- Name: reports_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY reports
    ADD CONSTRAINT reports_pkey PRIMARY KEY (id);


--
-- Name: reports_reportname_key; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY reports
    ADD CONSTRAINT reports_reportname_key UNIQUE (reportname, groupname);


--
-- Name: salesanalysis_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY salesanalysis
    ADD CONSTRAINT salesanalysis_pkey PRIMARY KEY (id);


--
-- Name: salescat_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY salescat
    ADD CONSTRAINT salescat_pkey PRIMARY KEY (salescatid);


--
-- Name: salesglpostings_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY salesglpostings
    ADD CONSTRAINT salesglpostings_pkey PRIMARY KEY (id);


--
-- Name: salesman_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY salesman
    ADD CONSTRAINT salesman_pkey PRIMARY KEY (salesmancode);


--
-- Name: salesorderdetails_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY salesorderdetails
    ADD CONSTRAINT salesorderdetails_pkey PRIMARY KEY (orderno, stkcode);


--
-- Name: salesorders_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY salesorders
    ADD CONSTRAINT salesorders_pkey PRIMARY KEY (orderno);


--
-- Name: salestypes_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY salestypes
    ADD CONSTRAINT salestypes_pkey PRIMARY KEY (typeabbrev);


--
-- Name: securitygroups_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY securitygroups
    ADD CONSTRAINT securitygroups_pkey PRIMARY KEY (secroleid, tokenid);


--
-- Name: securityheadings_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY securityroles
    ADD CONSTRAINT securityheadings_pkey PRIMARY KEY (secroleid);


--
-- Name: securitytokens_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY securitytokens
    ADD CONSTRAINT securitytokens_pkey PRIMARY KEY (tokenid);


--
-- Name: shipmentcharges_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY shipmentcharges
    ADD CONSTRAINT shipmentcharges_pkey PRIMARY KEY (shiptchgid);


--
-- Name: shipments_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY shipments
    ADD CONSTRAINT shipments_pkey PRIMARY KEY (shiptref);


--
-- Name: shippers_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY shippers
    ADD CONSTRAINT shippers_pkey PRIMARY KEY (shipper_id);


--
-- Name: stockcategory_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY stockcategory
    ADD CONSTRAINT stockcategory_pkey PRIMARY KEY (categoryid);


--
-- Name: stockcheckfreeze_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY stockcheckfreeze
    ADD CONSTRAINT stockcheckfreeze_pkey PRIMARY KEY (stockid);


--
-- Name: stockcounts_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY stockcounts
    ADD CONSTRAINT stockcounts_pkey PRIMARY KEY (id);


--
-- Name: stockmaster_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY stockmaster
    ADD CONSTRAINT stockmaster_pkey PRIMARY KEY (stockid);


--
-- Name: stockmoves_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY stockmoves
    ADD CONSTRAINT stockmoves_pkey PRIMARY KEY (stkmoveno);


--
-- Name: stockmovestaxes_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY stockmovestaxes
    ADD CONSTRAINT stockmovestaxes_pkey PRIMARY KEY (stkmoveno, taxauthid);


--
-- Name: stockserialitems_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY stockserialitems
    ADD CONSTRAINT stockserialitems_pkey PRIMARY KEY (stockid, serialno, loccode);


--
-- Name: stockserialmoves_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY stockserialmoves
    ADD CONSTRAINT stockserialmoves_pkey PRIMARY KEY (stkitmmoveno);


--
-- Name: suppallocs_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY suppallocs
    ADD CONSTRAINT suppallocs_pkey PRIMARY KEY (id);


--
-- Name: suppliercontacts_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY suppliercontacts
    ADD CONSTRAINT suppliercontacts_pkey PRIMARY KEY (supplierid, contact);


--
-- Name: suppliers_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY suppliers
    ADD CONSTRAINT suppliers_pkey PRIMARY KEY (supplierid);


--
-- Name: supptrans_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY supptrans
    ADD CONSTRAINT supptrans_pkey PRIMARY KEY (id);


--
-- Name: supptranstaxes_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY supptranstaxes
    ADD CONSTRAINT supptranstaxes_pkey PRIMARY KEY (supptransid, taxauthid);


--
-- Name: systypes_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY systypes
    ADD CONSTRAINT systypes_pkey PRIMARY KEY (typeid);


--
-- Name: taxauthlevels_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY taxauthrates
    ADD CONSTRAINT taxauthlevels_pkey PRIMARY KEY (taxauthority, dispatchtaxprovince, taxcatid);


--
-- Name: taxauthorities_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY taxauthorities
    ADD CONSTRAINT taxauthorities_pkey PRIMARY KEY (taxid);


--
-- Name: taxcategories_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY taxcategories
    ADD CONSTRAINT taxcategories_pkey PRIMARY KEY (taxcatid);


--
-- Name: taxgroups_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY taxgroups
    ADD CONSTRAINT taxgroups_pkey PRIMARY KEY (taxgroupid);


--
-- Name: taxgrouptaxes_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY taxgrouptaxes
    ADD CONSTRAINT taxgrouptaxes_pkey PRIMARY KEY (taxgroupid, taxauthid);


--
-- Name: taxprovinces_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY taxprovinces
    ADD CONSTRAINT taxprovinces_pkey PRIMARY KEY (taxprovinceid);


--
-- Name: unitsofmeasure_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY unitsofmeasure
    ADD CONSTRAINT unitsofmeasure_pkey PRIMARY KEY (unitname);


--
-- Name: workcentres_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY workcentres
    ADD CONSTRAINT workcentres_pkey PRIMARY KEY (code);


--
-- Name: www_users_pkey; Type: CONSTRAINT; Schema: public; Owner: weberp_db_user; Tablespace: 
--

ALTER TABLE ONLY www_users
    ADD CONSTRAINT www_users_pkey PRIMARY KEY (userid);


--
-- Name: cb_taxgroupid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX cb_taxgroupid ON custbranch USING btree (taxgroupid);


--
-- Name: idxaccount; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxaccount ON gltrans USING btree (account);


--
-- Name: idxaccountcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxaccountcode ON chartmaster USING btree (accountcode);


--
-- Name: idxaccountname; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxaccountname ON chartmaster USING btree (accountname);


--
-- Name: idxallowprintpo; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxallowprintpo ON purchorders USING btree (allowprint);


--
-- Name: idxbankaccountname; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbankaccountname ON bankaccounts USING btree (bankaccountname);


--
-- Name: idxbankaccountnumber; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbankaccountnumber ON bankaccounts USING btree (bankaccountnumber);


--
-- Name: idxbankact; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbankact ON banktrans USING btree (bankact, ref);


--
-- Name: idxbomcomponent; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbomcomponent ON bom USING btree (component);


--
-- Name: idxbomloccode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbomloccode ON bom USING btree (loccode);


--
-- Name: idxbomworkcentreadded; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbomworkcentreadded ON bom USING btree (workcentreadded);


--
-- Name: idxbrname; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbrname ON custbranch USING btree (brname);


--
-- Name: idxbtcurrcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbtcurrcode ON banktrans USING btree (currcode);


--
-- Name: idxbttranstype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbttranstype ON banktrans USING btree (banktranstype);


--
-- Name: idxbttype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbttype ON banktrans USING btree ("type", transno);


--
-- Name: idxbudgetoractual; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxbudgetoractual ON salesanalysis USING btree (budgetoractual);


--
-- Name: idxcadatealloc; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcadatealloc ON custallocns USING btree (datealloc);


--
-- Name: idxcan_or_bo; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcan_or_bo ON orderdeliverydifferenceslog USING btree (can_or_bo);


--
-- Name: idxcategorydescription; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcategorydescription ON stockcategory USING btree (categorydescription);


--
-- Name: idxcatransid_allocfrom; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcatransid_allocfrom ON custallocns USING btree (transid_allocfrom);


--
-- Name: idxcatransid_allocto; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcatransid_allocto ON custallocns USING btree (transid_allocto);


--
-- Name: idxcbarea; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcbarea ON custbranch USING btree (area);


--
-- Name: idxcbbranchcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcbbranchcode ON custbranch USING btree (branchcode);


--
-- Name: idxcbcomponent; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcbcomponent ON contractbom USING btree (component);


--
-- Name: idxcbdebtorno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcbdebtorno ON custbranch USING btree (debtorno);


--
-- Name: idxcbdefaultlocation; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcbdefaultlocation ON custbranch USING btree (defaultlocation);


--
-- Name: idxcbloccode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcbloccode ON contractbom USING btree (loccode);


--
-- Name: idxcbworkcentreadded; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcbworkcentreadded ON contractbom USING btree (workcentreadded);


--
-- Name: idxcbworkcentreadded_2; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcbworkcentreadded_2 ON contractbom USING btree (workcentreadded);


--
-- Name: idxccategoryid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxccategoryid ON contracts USING btree (categoryid);


--
-- Name: idxcdebtorno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcdebtorno ON contracts USING btree (debtorno, branchcode);


--
-- Name: idxchequeno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxchequeno ON gltrans USING btree (chequeno);


--
-- Name: idxcontact; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcontact ON suppliercontacts USING btree (contact);


--
-- Name: idxcontract; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcontract ON contractreqts USING btree (contract);


--
-- Name: idxcontractref; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcontractref ON contractbom USING btree (contractref);


--
-- Name: idxcontrolled; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcontrolled ON stockmaster USING btree (controlled);


--
-- Name: idxcorderno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcorderno ON contracts USING btree (orderno);


--
-- Name: idxcountry; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcountry ON currencies USING btree (country);


--
-- Name: idxcparea; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcparea ON cogsglpostings USING btree (area);


--
-- Name: idxcpglcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcpglcode ON cogsglpostings USING btree (glcode);


--
-- Name: idxcpsalestype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcpsalestype ON cogsglpostings USING btree (salestype);


--
-- Name: idxcpstkcat; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcpstkcat ON cogsglpostings USING btree (stkcat);


--
-- Name: idxctypeabbrev; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxctypeabbrev ON contracts USING btree (typeabbrev);


--
-- Name: idxcurrabrev; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcurrabrev ON prices USING btree (currabrev);


--
-- Name: idxcurrency; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcurrency ON debtorsmaster USING btree (currcode);


--
-- Name: idxcust; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcust ON salesanalysis USING btree (cust);


--
-- Name: idxcustbranch; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcustbranch ON salesanalysis USING btree (custbranch);


--
-- Name: idxcustomerid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcustomerid ON www_users USING btree (customerid);


--
-- Name: idxcworef; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxcworef ON contracts USING btree (woref);


--
-- Name: idxdayinfollowingmonth; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdayinfollowingmonth ON paymentterms USING btree (dayinfollowingmonth);


--
-- Name: idxdaysbeforedue; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdaysbeforedue ON paymentterms USING btree (daysbeforedue);


--
-- Name: idxdebmsalestype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdebmsalestype ON debtorsmaster USING btree (salestype);


--
-- Name: idxdefaultshipvia; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdefaultshipvia ON custbranch USING btree (defaultshipvia);


--
-- Name: idxdestination; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdestination ON freightcosts USING btree (destination);


--
-- Name: idxdestination_2; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdestination_2 ON freightcosts USING btree (destination, locationfrom, shipperid);


--
-- Name: idxdismsalestype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdismsalestype ON discountmatrix USING btree (salestype);


--
-- Name: idxdispatchtaxauthority; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdispatchtaxauthority ON taxauthrates USING btree (dispatchtaxprovince);


--
-- Name: idxdmdiscountcategory; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdmdiscountcategory ON discountmatrix USING btree (discountcategory);


--
-- Name: idxdmpaymentterms; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdmpaymentterms ON debtorsmaster USING btree (paymentterms);


--
-- Name: idxdtdebtorno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdtdebtorno ON debtortrans USING btree (debtorno, branchcode);


--
-- Name: idxdtprd; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdtprd ON debtortrans USING btree (prd);


--
-- Name: idxdtsettled; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdtsettled ON debtortrans USING btree (settled);


--
-- Name: idxdttrandate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdttrandate ON debtortrans USING btree (trandate);


--
-- Name: idxdttransno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdttransno ON debtortrans USING btree (transno);


--
-- Name: idxdttype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdttype ON debtortrans USING btree ("type");


--
-- Name: idxdttype_2; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxdttype_2 ON debtortrans USING btree ("type", transno);


--
-- Name: idxduedate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxduedate ON supptrans USING btree (duedate);


--
-- Name: idxediinvoices; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxediinvoices ON debtorsmaster USING btree (ediinvoices);


--
-- Name: idxediorders; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxediorders ON debtorsmaster USING btree (ediorders);


--
-- Name: idxedisent; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxedisent ON debtortrans USING btree (edisent);


--
-- Name: idxeffectiveafter; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxeffectiveafter ON bom USING btree (effectiveafter);


--
-- Name: idxeffectiveto; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxeffectiveto ON bom USING btree (effectiveto);


--
-- Name: idxeimstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxeimstockid ON ediitemmapping USING btree (stockid);


--
-- Name: idxeta; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxeta ON shipments USING btree (eta);


--
-- Name: idxgrndeliverydate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxgrndeliverydate ON grns USING btree (deliverydate);


--
-- Name: idxgrnitemcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxgrnitemcode ON grns USING btree (itemcode);


--
-- Name: idxgrnsupplierid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxgrnsupplierid ON grns USING btree (supplierid);


--
-- Name: idxgroup_; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxgroup_ ON chartmaster USING btree (group_);


--
-- Name: idxgtjobref; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxgtjobref ON gltrans USING btree (jobref);


--
-- Name: idxgtperiodno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxgtperiodno ON gltrans USING btree (periodno);


--
-- Name: idxgttrandate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxgttrandate ON gltrans USING btree (trandate);


--
-- Name: idxgttypeno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxgttypeno ON gltrans USING btree (typeno);


--
-- Name: idxhide; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxhide ON stockmoves USING btree (hidemovt);


--
-- Name: idxhold; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxhold ON supptrans USING btree ("hold");


--
-- Name: idxholdreason; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxholdreason ON debtorsmaster USING btree (holdreason);


--
-- Name: idxintostocklocation; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxintostocklocation ON purchorders USING btree (intostocklocation);


--
-- Name: idxlastcurcostdate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxlastcurcostdate ON stockmaster USING btree (lastcurcostdate);


--
-- Name: idxlastdate_in_period; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxlastdate_in_period ON periods USING btree (lastdate_in_period);


--
-- Name: idxlocation; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxlocation ON workcentres USING btree ("location");


--
-- Name: idxlocationfrom; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxlocationfrom ON freightcosts USING btree (locationfrom);


--
-- Name: idxlocationindex; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxlocationindex ON salesorders USING btree (fromstkloc);


--
-- Name: idxlsstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxlsstockid ON locstock USING btree (stockid);


--
-- Name: idxltstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxltstockid ON loctransfers USING btree (stockid);


--
-- Name: idxmbflag; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxmbflag ON stockmaster USING btree (mbflag);


--
-- Name: idxname; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxname ON debtorsmaster USING btree (name);


--
-- Name: idxodddebtorno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxodddebtorno ON orderdeliverydifferenceslog USING btree (debtorno, branch);


--
-- Name: idxoddlorderno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxoddlorderno ON orderdeliverydifferenceslog USING btree (orderno);


--
-- Name: idxoddlstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxoddlstockid ON orderdeliverydifferenceslog USING btree (stockid);


--
-- Name: idxorder_; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxorder_ ON debtortrans USING btree (order_);


--
-- Name: idxordertype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxordertype ON salesorders USING btree (ordertype);


--
-- Name: idxparent; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxparent ON bom USING btree (parent, effectiveafter, effectiveto, loccode);


--
-- Name: idxparent_2; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxparent_2 ON bom USING btree (parent);


--
-- Name: idxpartnercode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpartnercode ON ediitemmapping USING btree (partnercode);


--
-- Name: idxpartnerstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpartnerstockid ON ediitemmapping USING btree (partnerstockid);


--
-- Name: idxpdebtorno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpdebtorno ON prices USING btree (debtorno);


--
-- Name: idxpdstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpdstockid ON purchdata USING btree (stockid);


--
-- Name: idxpdsupplierno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpdsupplierno ON purchdata USING btree (supplierno);


--
-- Name: idxperiod; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxperiod ON chartdetails USING btree (period);


--
-- Name: idxpodcompleted; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpodcompleted ON purchorderdetails USING btree (completed);


--
-- Name: idxpoddeliverydate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpoddeliverydate ON purchorderdetails USING btree (deliverydate);


--
-- Name: idxpodetailitem; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpodetailitem ON grns USING btree (podetailitem);


--
-- Name: idxpodglcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpodglcode ON purchorderdetails USING btree (glcode);


--
-- Name: idxpoditemcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpoditemcode ON purchorderdetails USING btree (itemcode);


--
-- Name: idxpodjobref; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpodjobref ON purchorderdetails USING btree (jobref);


--
-- Name: idxpodorderno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpodorderno ON purchorderdetails USING btree (orderno);


--
-- Name: idxpodshiptref; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpodshiptref ON purchorderdetails USING btree (shiptref);


--
-- Name: idxpoorddate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpoorddate ON purchorders USING btree (orddate);


--
-- Name: idxposted; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxposted ON gltrans USING btree (posted);


--
-- Name: idxposupplierno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxposupplierno ON purchorders USING btree (supplierno);


--
-- Name: idxpreferred; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpreferred ON purchdata USING btree (preferred);


--
-- Name: idxpstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpstockid ON prices USING btree (stockid);


--
-- Name: idxptypeabbrev; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxptypeabbrev ON prices USING btree (typeabbrev);


--
-- Name: idxpurchtaxglaccount; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxpurchtaxglaccount ON taxauthorities USING btree (purchtaxglaccount);


--
-- Name: idxquantitybreak; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxquantitybreak ON discountmatrix USING btree (quantitybreak);


--
-- Name: idxreasoncode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxreasoncode ON holdreasons USING btree (reasoncode);


--
-- Name: idxreasondescription; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxreasondescription ON holdreasons USING btree (reasondescription);


--
-- Name: idxrecloc; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxrecloc ON loctransfers USING btree (recloc);


--
-- Name: idxreference; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxreference ON loctransfers USING btree (reference, stockid);


--
-- Name: idxreportheading; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxreportheading ON reportheaders USING btree (reportheading);


--
-- Name: idxsaarea; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsaarea ON salesanalysis USING btree (area);


--
-- Name: idxsadatealloc; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsadatealloc ON suppallocs USING btree (datealloc);


--
-- Name: idxsales_type; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsales_type ON salestypes USING btree (sales_type);


--
-- Name: idxsalescatprod; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE UNIQUE INDEX idxsalescatprod ON salescatprod USING btree (salescatid, stockid);


--
-- Name: idxsalesman; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsalesman ON custbranch USING btree (salesman);


--
-- Name: idxsalesperson; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsalesperson ON salesanalysis USING btree (salesperson);


--
-- Name: idxsaperiodno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsaperiodno ON salesanalysis USING btree (periodno);


--
-- Name: idxsastkcategory; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsastkcategory ON salesanalysis USING btree (stkcategory);


--
-- Name: idxsastockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsastockid ON salesanalysis USING btree (stockid);


--
-- Name: idxsatransid_allocfrom; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsatransid_allocfrom ON suppallocs USING btree (transid_allocfrom);


--
-- Name: idxsatransid_allocto; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsatransid_allocto ON suppallocs USING btree (transid_allocto);


--
-- Name: idxsatypeabbrev; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsatypeabbrev ON salesanalysis USING btree (typeabbrev);


--
-- Name: idxscfloccode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxscfloccode ON stockcheckfreeze USING btree (loccode);


--
-- Name: idxscntloccode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxscntloccode ON stockcounts USING btree (loccode);


--
-- Name: idxscntstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxscntstockid ON stockcounts USING btree (stockid);


--
-- Name: idxscshiptref; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxscshiptref ON shipmentcharges USING btree (shiptref);


--
-- Name: idxscstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxscstockid ON shipmentcharges USING btree (stockid);


--
-- Name: idxscsupplierid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxscsupplierid ON suppliercontacts USING btree (supplierid);


--
-- Name: idxsctranstype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsctranstype ON shipmentcharges USING btree (transtype, transno);


--
-- Name: idxsctranstype_2; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsctranstype_2 ON shipmentcharges USING btree (transtype);


--
-- Name: idxscurrcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxscurrcode ON suppliers USING btree (currcode);


--
-- Name: idxsection; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsection ON edimessageformat USING btree (section);


--
-- Name: idxsegno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsegno ON edi_orders_segs USING btree (seggroup);


--
-- Name: idxsegtag; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsegtag ON edi_orders_segs USING btree (segtag);


--
-- Name: idxsequenceintb; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsequenceintb ON accountgroups USING btree (sequenceintb);


--
-- Name: idxshiploc; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxshiploc ON loctransfers USING btree (shiploc);


--
-- Name: idxshipperid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxshipperid ON freightcosts USING btree (shipperid);


--
-- Name: idxshipperref; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxshipperref ON shipments USING btree (voyageref);


--
-- Name: idxshipsupplierid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxshipsupplierid ON shipments USING btree (supplierid);


--
-- Name: idxshipvia; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxshipvia ON salesorders USING btree (shipvia);


--
-- Name: idxshow_on_inv_crds; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxshow_on_inv_crds ON stockmoves USING btree (show_on_inv_crds);


--
-- Name: idxsmcategoryid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmcategoryid ON stockmaster USING btree (categoryid);


--
-- Name: idxsmdebtorno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmdebtorno ON stockmoves USING btree (debtorno);


--
-- Name: idxsmdescription; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmdescription ON stockmaster USING btree (description);


--
-- Name: idxsmdiscountcategory; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmdiscountcategory ON stockmaster USING btree (discountcategory);


--
-- Name: idxsmloccode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmloccode ON stockmoves USING btree (loccode);


--
-- Name: idxsmprd; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmprd ON stockmoves USING btree (prd);


--
-- Name: idxsmstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmstockid ON stockmaster USING btree (stockid, categoryid);


--
-- Name: idxsmtrandate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmtrandate ON stockmoves USING btree (trandate);


--
-- Name: idxsmtransno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmtransno ON stockmoves USING btree (transno);


--
-- Name: idxsmtype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmtype ON stockmoves USING btree ("type");


--
-- Name: idxsmvstockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmvstockid ON stockmoves USING btree (stockid, loccode);


--
-- Name: idxsmvstockid_2; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsmvstockid_2 ON stockmoves USING btree (stockid);


--
-- Name: idxsobranchcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsobranchcode ON salesorders USING btree (branchcode, debtorno);


--
-- Name: idxsodcompleted; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsodcompleted ON salesorderdetails USING btree (completed);


--
-- Name: idxsodebtorno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsodebtorno ON salesorders USING btree (debtorno);


--
-- Name: idxsodorddate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsodorddate ON salesorders USING btree (orddate);


--
-- Name: idxsodorderno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsodorderno ON salesorderdetails USING btree (orderno);


--
-- Name: idxsparea; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsparea ON salesglpostings USING btree (area);


--
-- Name: idxspaymentterms; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxspaymentterms ON suppliers USING btree (paymentterms);


--
-- Name: idxspsalestype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxspsalestype ON salesglpostings USING btree (salestype);


--
-- Name: idxspstkcat; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxspstkcat ON salesglpostings USING btree (stkcat);


--
-- Name: idxssiloccode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxssiloccode ON stockserialitems USING btree (loccode);


--
-- Name: idxssistockid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxssistockid ON stockserialitems USING btree (stockid);


--
-- Name: idxssmstockid_sn; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxssmstockid_sn ON stockserialmoves USING btree (stockid, serialno);


--
-- Name: idxstatus; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstatus ON contracts USING btree (status);


--
-- Name: idxstaxauthority; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstaxauthority ON suppliers USING btree (taxgroupid);


--
-- Name: idxstkcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstkcode ON salesorderdetails USING btree (stkcode);


--
-- Name: idxstockmoveno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstockmoveno ON stockserialmoves USING btree (stockmoveno);


--
-- Name: idxstocktype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstocktype ON stockcategory USING btree (stocktype);


--
-- Name: idxstsettled; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstsettled ON supptrans USING btree (settled);


--
-- Name: idxstsupplierno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstsupplierno ON supptrans USING btree (supplierno);


--
-- Name: idxstsupplierno_2; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstsupplierno_2 ON supptrans USING btree (supplierno, suppreference);


--
-- Name: idxstt_taxauthid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstt_taxauthid ON supptranstaxes USING btree (taxauthid);


--
-- Name: idxstt_taxgroupid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxstt_taxgroupid ON suppliers USING btree (taxgroupid);


--
-- Name: idxsttrandate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsttrandate ON supptrans USING btree (trandate);


--
-- Name: idxsttransno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsttransno ON supptrans USING btree (transno);


--
-- Name: idxsttype; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsttype ON supptrans USING btree ("type");


--
-- Name: idxsttypeno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsttypeno ON systypes USING btree (typeno);


--
-- Name: idxsuppname; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsuppname ON suppliers USING btree (suppname);


--
-- Name: idxsupporcust; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsupporcust ON ediitemmapping USING btree (supporcust);


--
-- Name: idxsuppreference; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsuppreference ON supptrans USING btree (suppreference);


--
-- Name: idxsupsupplierid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxsupsupplierid ON suppliers USING btree (supplierid);


--
-- Name: idxtaltaxauthority; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxtaltaxauthority ON taxauthrates USING btree (taxauthority);


--
-- Name: idxtaxcatid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxtaxcatid ON taxauthrates USING btree (taxcatid);


--
-- Name: idxtaxglcode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxtaxglcode ON taxauthorities USING btree (taxglcode);


--
-- Name: idxtpe; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxtpe ON debtortrans USING btree (tpe);


--
-- Name: idxtransdate; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxtransdate ON banktrans USING btree (transdate);


--
-- Name: idxtype_and_number; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxtype_and_number ON gltrans USING btree ("type", typeno);


--
-- Name: idxusrdefaultlocation; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxusrdefaultlocation ON www_users USING btree (defaultlocation);


--
-- Name: idxvessel; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxvessel ON shipments USING btree (vessel);


--
-- Name: idxwcdescription; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX idxwcdescription ON workcentres USING btree (description);


--
-- Name: locations_taxprovinceid_index; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX locations_taxprovinceid_index ON locations USING btree (taxprovinceid);


--
-- Name: section; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX section ON accountgroups USING btree (sectioninaccounts);


--
-- Name: tgt_taxauthid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX tgt_taxauthid ON taxgrouptaxes USING btree (taxauthid);


--
-- Name: tgt_taxgroupid; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE INDEX tgt_taxgroupid ON taxgrouptaxes USING btree (taxgroupid);


--
-- Name: uidxcparea_stkcat; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE UNIQUE INDEX uidxcparea_stkcat ON cogsglpostings USING btree (area, stkcat, salestype);


--
-- Name: uidxpartnercode; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE UNIQUE INDEX uidxpartnercode ON edimessageformat USING btree (partnercode, messagetype, sequenceno);


--
-- Name: uidxsgparea_stkcat; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE UNIQUE INDEX uidxsgparea_stkcat ON salesglpostings USING btree (area, stkcat, salestype);


--
-- Name: uidxtypetransno; Type: INDEX; Schema: public; Owner: weberp_db_user; Tablespace: 
--

CREATE UNIQUE INDEX uidxtypetransno ON supptrans USING btree (transno, "type");


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY accountgroups
    ADD CONSTRAINT "$1" FOREIGN KEY (sectioninaccounts) REFERENCES accountsection(sectionid);


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY salescatprod
    ADD CONSTRAINT "$1" FOREIGN KEY (salescatid) REFERENCES salescat(salescatid);


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY taxgrouptaxes
    ADD CONSTRAINT "$1" FOREIGN KEY (taxgroupid) REFERENCES taxgroups(taxgroupid);


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockmovestaxes
    ADD CONSTRAINT "$1" FOREIGN KEY (taxauthid) REFERENCES taxauthorities(taxid);


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtortranstaxes
    ADD CONSTRAINT "$1" FOREIGN KEY (debtortransid) REFERENCES debtortrans(id);


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY custbranch
    ADD CONSTRAINT "$1" FOREIGN KEY (taxgroupid) REFERENCES taxgroups(taxgroupid);


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY taxauthrates
    ADD CONSTRAINT "$1" FOREIGN KEY (dispatchtaxprovince) REFERENCES taxprovinces(taxprovinceid);


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY supptranstaxes
    ADD CONSTRAINT "$1" FOREIGN KEY (supptransid) REFERENCES supptrans(id);


--
-- Name: $1; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY suppliers
    ADD CONSTRAINT "$1" FOREIGN KEY (taxgroupid) REFERENCES taxgroups(taxgroupid);


--
-- Name: $2; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY salescatprod
    ADD CONSTRAINT "$2" FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: $2; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY taxgrouptaxes
    ADD CONSTRAINT "$2" FOREIGN KEY (taxauthid) REFERENCES taxauthorities(taxid);


--
-- Name: $2; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtortranstaxes
    ADD CONSTRAINT "$2" FOREIGN KEY (taxauthid) REFERENCES taxauthorities(taxid);


--
-- Name: $2; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY supptranstaxes
    ADD CONSTRAINT "$2" FOREIGN KEY (taxauthid) REFERENCES taxauthorities(taxid);


--
-- Name: cnt001238; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY bom
    ADD CONSTRAINT cnt001238 FOREIGN KEY (parent) REFERENCES stockmaster(stockid);


--
-- Name: cnt001239; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY bom
    ADD CONSTRAINT cnt001239 FOREIGN KEY (component) REFERENCES stockmaster(stockid);


--
-- Name: cnt001240; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY bom
    ADD CONSTRAINT cnt001240 FOREIGN KEY (workcentreadded) REFERENCES workcentres(code);


--
-- Name: cnt001241; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY bom
    ADD CONSTRAINT cnt001241 FOREIGN KEY (loccode) REFERENCES locations(loccode);


--
-- Name: cnt001243; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY bankaccounts
    ADD CONSTRAINT cnt001243 FOREIGN KEY (accountcode) REFERENCES chartmaster(accountcode);


--
-- Name: cnt001245; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY banktrans
    ADD CONSTRAINT cnt001245 FOREIGN KEY ("type") REFERENCES systypes(typeid);


--
-- Name: cnt001246; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY banktrans
    ADD CONSTRAINT cnt001246 FOREIGN KEY (bankact) REFERENCES bankaccounts(accountcode);


--
-- Name: cnt001251; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY chartdetails
    ADD CONSTRAINT cnt001251 FOREIGN KEY (accountcode) REFERENCES chartmaster(accountcode);


--
-- Name: cnt001252; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY chartdetails
    ADD CONSTRAINT cnt001252 FOREIGN KEY (period) REFERENCES periods(periodno);


--
-- Name: cnt001254; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY chartmaster
    ADD CONSTRAINT cnt001254 FOREIGN KEY (group_) REFERENCES accountgroups(groupname);


--
-- Name: cnt001257; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY contractbom
    ADD CONSTRAINT cnt001257 FOREIGN KEY (workcentreadded) REFERENCES workcentres(code);


--
-- Name: cnt001258; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY contractbom
    ADD CONSTRAINT cnt001258 FOREIGN KEY (loccode) REFERENCES locations(loccode);


--
-- Name: cnt001259; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY contractbom
    ADD CONSTRAINT cnt001259 FOREIGN KEY (component) REFERENCES stockmaster(stockid);


--
-- Name: cnt001261; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY contractreqts
    ADD CONSTRAINT cnt001261 FOREIGN KEY (contract) REFERENCES contracts(contractref);


--
-- Name: cnt001263; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY contracts
    ADD CONSTRAINT cnt001263 FOREIGN KEY (debtorno, branchcode) REFERENCES custbranch(debtorno, branchcode);


--
-- Name: cnt001264; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY contracts
    ADD CONSTRAINT cnt001264 FOREIGN KEY (categoryid) REFERENCES stockcategory(categoryid);


--
-- Name: cnt001265; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY contracts
    ADD CONSTRAINT cnt001265 FOREIGN KEY (typeabbrev) REFERENCES salestypes(typeabbrev);


--
-- Name: cnt001268; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY custallocns
    ADD CONSTRAINT cnt001268 FOREIGN KEY (transid_allocfrom) REFERENCES debtortrans(id);


--
-- Name: cnt001269; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY custallocns
    ADD CONSTRAINT cnt001269 FOREIGN KEY (transid_allocto) REFERENCES debtortrans(id);


--
-- Name: cnt001271; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY custbranch
    ADD CONSTRAINT cnt001271 FOREIGN KEY (debtorno) REFERENCES debtorsmaster(debtorno);


--
-- Name: cnt001272; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY custbranch
    ADD CONSTRAINT cnt001272 FOREIGN KEY (area) REFERENCES areas(areacode);


--
-- Name: cnt001273; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY custbranch
    ADD CONSTRAINT cnt001273 FOREIGN KEY (salesman) REFERENCES salesman(salesmancode);


--
-- Name: cnt001274; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY custbranch
    ADD CONSTRAINT cnt001274 FOREIGN KEY (defaultlocation) REFERENCES locations(loccode);


--
-- Name: cnt001276; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY custbranch
    ADD CONSTRAINT cnt001276 FOREIGN KEY (defaultshipvia) REFERENCES shippers(shipper_id);


--
-- Name: cnt001278; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtortrans
    ADD CONSTRAINT cnt001278 FOREIGN KEY (debtorno) REFERENCES debtorsmaster(debtorno);


--
-- Name: cnt001279; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtortrans
    ADD CONSTRAINT cnt001279 FOREIGN KEY ("type") REFERENCES systypes(typeid);


--
-- Name: cnt001280; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtortrans
    ADD CONSTRAINT cnt001280 FOREIGN KEY (prd) REFERENCES periods(periodno);


--
-- Name: cnt001282; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtorsmaster
    ADD CONSTRAINT cnt001282 FOREIGN KEY (holdreason) REFERENCES holdreasons(reasoncode);


--
-- Name: cnt001283; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtorsmaster
    ADD CONSTRAINT cnt001283 FOREIGN KEY (currcode) REFERENCES currencies(currabrev);


--
-- Name: cnt001284; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtorsmaster
    ADD CONSTRAINT cnt001284 FOREIGN KEY (paymentterms) REFERENCES paymentterms(termsindicator);


--
-- Name: cnt001285; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY debtorsmaster
    ADD CONSTRAINT cnt001285 FOREIGN KEY (salestype) REFERENCES salestypes(typeabbrev);


--
-- Name: cnt001287; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY discountmatrix
    ADD CONSTRAINT cnt001287 FOREIGN KEY (salestype) REFERENCES salestypes(typeabbrev);


--
-- Name: cnt001293; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY freightcosts
    ADD CONSTRAINT cnt001293 FOREIGN KEY (locationfrom) REFERENCES locations(loccode);


--
-- Name: cnt001294; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY freightcosts
    ADD CONSTRAINT cnt001294 FOREIGN KEY (shipperid) REFERENCES shippers(shipper_id);


--
-- Name: cnt001296; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY gltrans
    ADD CONSTRAINT cnt001296 FOREIGN KEY (account) REFERENCES chartmaster(accountcode);


--
-- Name: cnt001297; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY gltrans
    ADD CONSTRAINT cnt001297 FOREIGN KEY ("type") REFERENCES systypes(typeid);


--
-- Name: cnt001298; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY gltrans
    ADD CONSTRAINT cnt001298 FOREIGN KEY (periodno) REFERENCES periods(periodno);


--
-- Name: cnt001300; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY grns
    ADD CONSTRAINT cnt001300 FOREIGN KEY (supplierid) REFERENCES suppliers(supplierid);


--
-- Name: cnt001301; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY grns
    ADD CONSTRAINT cnt001301 FOREIGN KEY (podetailitem) REFERENCES purchorderdetails(podetailitem);


--
-- Name: cnt001305; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY locstock
    ADD CONSTRAINT cnt001305 FOREIGN KEY (loccode) REFERENCES locations(loccode);


--
-- Name: cnt001306; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY locstock
    ADD CONSTRAINT cnt001306 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001308; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY loctransfers
    ADD CONSTRAINT cnt001308 FOREIGN KEY (shiploc) REFERENCES locations(loccode);


--
-- Name: cnt001309; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY loctransfers
    ADD CONSTRAINT cnt001309 FOREIGN KEY (recloc) REFERENCES locations(loccode);


--
-- Name: cnt001310; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY loctransfers
    ADD CONSTRAINT cnt001310 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001313; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY orderdeliverydifferenceslog
    ADD CONSTRAINT cnt001313 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001314; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY orderdeliverydifferenceslog
    ADD CONSTRAINT cnt001314 FOREIGN KEY (debtorno, branch) REFERENCES custbranch(debtorno, branchcode);


--
-- Name: cnt001315; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY orderdeliverydifferenceslog
    ADD CONSTRAINT cnt001315 FOREIGN KEY (orderno) REFERENCES salesorders(orderno);


--
-- Name: cnt001319; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY prices
    ADD CONSTRAINT cnt001319 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001320; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY prices
    ADD CONSTRAINT cnt001320 FOREIGN KEY (currabrev) REFERENCES currencies(currabrev);


--
-- Name: cnt001321; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY prices
    ADD CONSTRAINT cnt001321 FOREIGN KEY (typeabbrev) REFERENCES salestypes(typeabbrev);


--
-- Name: cnt001323; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY purchdata
    ADD CONSTRAINT cnt001323 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001324; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY purchdata
    ADD CONSTRAINT cnt001324 FOREIGN KEY (supplierno) REFERENCES suppliers(supplierid);


--
-- Name: cnt001326; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY purchorderdetails
    ADD CONSTRAINT cnt001326 FOREIGN KEY (orderno) REFERENCES purchorders(orderno);


--
-- Name: cnt001328; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY purchorders
    ADD CONSTRAINT cnt001328 FOREIGN KEY (supplierno) REFERENCES suppliers(supplierid);


--
-- Name: cnt001329; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY purchorders
    ADD CONSTRAINT cnt001329 FOREIGN KEY (intostocklocation) REFERENCES locations(loccode);


--
-- Name: cnt001331; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY reportcolumns
    ADD CONSTRAINT cnt001331 FOREIGN KEY (reportid) REFERENCES reportheaders(reportid);


--
-- Name: cnt001334; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY salesanalysis
    ADD CONSTRAINT cnt001334 FOREIGN KEY (periodno) REFERENCES periods(periodno);


--
-- Name: cnt001337; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY salesorderdetails
    ADD CONSTRAINT cnt001337 FOREIGN KEY (orderno) REFERENCES salesorders(orderno);


--
-- Name: cnt001338; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY salesorderdetails
    ADD CONSTRAINT cnt001338 FOREIGN KEY (stkcode) REFERENCES stockmaster(stockid);


--
-- Name: cnt001340; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY salesorders
    ADD CONSTRAINT cnt001340 FOREIGN KEY (branchcode, debtorno) REFERENCES custbranch(branchcode, debtorno);


--
-- Name: cnt001341; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY salesorders
    ADD CONSTRAINT cnt001341 FOREIGN KEY (shipvia) REFERENCES shippers(shipper_id);


--
-- Name: cnt001342; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY salesorders
    ADD CONSTRAINT cnt001342 FOREIGN KEY (fromstkloc) REFERENCES locations(loccode);


--
-- Name: cnt001347; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY shipmentcharges
    ADD CONSTRAINT cnt001347 FOREIGN KEY (shiptref) REFERENCES shipments(shiptref);


--
-- Name: cnt001348; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY shipmentcharges
    ADD CONSTRAINT cnt001348 FOREIGN KEY (transtype) REFERENCES systypes(typeid);


--
-- Name: cnt001350; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY shipments
    ADD CONSTRAINT cnt001350 FOREIGN KEY (supplierid) REFERENCES suppliers(supplierid);


--
-- Name: cnt001354; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockcheckfreeze
    ADD CONSTRAINT cnt001354 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001355; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockcheckfreeze
    ADD CONSTRAINT cnt001355 FOREIGN KEY (loccode) REFERENCES locations(loccode);


--
-- Name: cnt001357; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockcounts
    ADD CONSTRAINT cnt001357 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001358; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockcounts
    ADD CONSTRAINT cnt001358 FOREIGN KEY (loccode) REFERENCES locations(loccode);


--
-- Name: cnt001360; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockmaster
    ADD CONSTRAINT cnt001360 FOREIGN KEY (categoryid) REFERENCES stockcategory(categoryid);


--
-- Name: cnt001362; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockmoves
    ADD CONSTRAINT cnt001362 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001363; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockmoves
    ADD CONSTRAINT cnt001363 FOREIGN KEY ("type") REFERENCES systypes(typeid);


--
-- Name: cnt001364; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockmoves
    ADD CONSTRAINT cnt001364 FOREIGN KEY (loccode) REFERENCES locations(loccode);


--
-- Name: cnt001365; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockmoves
    ADD CONSTRAINT cnt001365 FOREIGN KEY (prd) REFERENCES periods(periodno);


--
-- Name: cnt001367; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockserialitems
    ADD CONSTRAINT cnt001367 FOREIGN KEY (stockid) REFERENCES stockmaster(stockid);


--
-- Name: cnt001368; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockserialitems
    ADD CONSTRAINT cnt001368 FOREIGN KEY (loccode) REFERENCES locations(loccode);


--
-- Name: cnt001370; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY stockserialmoves
    ADD CONSTRAINT cnt001370 FOREIGN KEY (stockmoveno) REFERENCES stockmoves(stkmoveno);


--
-- Name: cnt001373; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY suppallocs
    ADD CONSTRAINT cnt001373 FOREIGN KEY (transid_allocfrom) REFERENCES supptrans(id);


--
-- Name: cnt001374; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY suppallocs
    ADD CONSTRAINT cnt001374 FOREIGN KEY (transid_allocto) REFERENCES supptrans(id);


--
-- Name: cnt001376; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY supptrans
    ADD CONSTRAINT cnt001376 FOREIGN KEY ("type") REFERENCES systypes(typeid);


--
-- Name: cnt001377; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY supptrans
    ADD CONSTRAINT cnt001377 FOREIGN KEY (supplierno) REFERENCES suppliers(supplierid);


--
-- Name: cnt001379; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY suppliercontacts
    ADD CONSTRAINT cnt001379 FOREIGN KEY (supplierid) REFERENCES suppliers(supplierid);


--
-- Name: cnt001381; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY suppliers
    ADD CONSTRAINT cnt001381 FOREIGN KEY (currcode) REFERENCES currencies(currabrev);


--
-- Name: cnt001382; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY suppliers
    ADD CONSTRAINT cnt001382 FOREIGN KEY (paymentterms) REFERENCES paymentterms(termsindicator);


--
-- Name: cnt001386; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY taxauthrates
    ADD CONSTRAINT cnt001386 FOREIGN KEY (taxauthority) REFERENCES taxauthorities(taxid);


--
-- Name: cnt001389; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY taxauthorities
    ADD CONSTRAINT cnt001389 FOREIGN KEY (taxglcode) REFERENCES chartmaster(accountcode);


--
-- Name: cnt001390; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY taxauthorities
    ADD CONSTRAINT cnt001390 FOREIGN KEY (purchtaxglaccount) REFERENCES chartmaster(accountcode);


--
-- Name: cnt001400; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY www_users
    ADD CONSTRAINT cnt001400 FOREIGN KEY (defaultlocation) REFERENCES locations(loccode);


--
-- Name: cnt001402; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY workcentres
    ADD CONSTRAINT cnt001402 FOREIGN KEY ("location") REFERENCES locations(loccode);


--
-- Name: recurrorderno; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY recurrsalesorderdetails
    ADD CONSTRAINT recurrorderno FOREIGN KEY (recurrorderno) REFERENCES recurringsalesorders(recurrorderno);


--
-- Name: recurrorderstkcode; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY recurrsalesorderdetails
    ADD CONSTRAINT recurrorderstkcode FOREIGN KEY (stkcode) REFERENCES stockmaster(stockid);


--
-- Name: securitygroups_secgroupid_fk; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY securitygroups
    ADD CONSTRAINT securitygroups_secgroupid_fk FOREIGN KEY (secroleid) REFERENCES securityroles(secroleid);


--
-- Name: securitygroups_tokenid_fk; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY securitygroups
    ADD CONSTRAINT securitygroups_tokenid_fk FOREIGN KEY (tokenid) REFERENCES securitytokens(tokenid);


--
-- Name: taxcatid_fk; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY taxauthrates
    ADD CONSTRAINT taxcatid_fk FOREIGN KEY (taxcatid) REFERENCES taxcategories(taxcatid);


--
-- Name: taxprovinceid_fk; Type: FK CONSTRAINT; Schema: public; Owner: weberp_db_user
--

ALTER TABLE ONLY locations
    ADD CONSTRAINT taxprovinceid_fk FOREIGN KEY (taxprovinceid) REFERENCES taxprovinces(taxprovinceid);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: accountsection; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO accountsection VALUES (2, 'Cost of Sales');
INSERT INTO accountsection VALUES (10, 'Fixed Assets');
INSERT INTO accountsection VALUES (30, 'Amounts Payable');
INSERT INTO accountsection VALUES (5, 'Overheads');
INSERT INTO accountsection VALUES (50, 'Financed By');
INSERT INTO accountsection VALUES (1, 'Revenue');
INSERT INTO accountsection VALUES (20, 'Amounts Receivable');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: accountgroups; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO accountgroups VALUES ('Sales', 1, 1, 10);
INSERT INTO accountgroups VALUES ('Revenue', 1, 1, 4000);
INSERT INTO accountgroups VALUES ('Liabilities', 30, 0, 2000);
INSERT INTO accountgroups VALUES ('Equity', 50, 0, 3000);
INSERT INTO accountgroups VALUES ('COG Sold', 2, 1, 5000);
INSERT INTO accountgroups VALUES ('Marketing Expenses', 5, 1, 6000);
INSERT INTO accountgroups VALUES ('Operating Expenses', 5, 1, 7000);
INSERT INTO accountgroups VALUES ('Other Revenue and Expenses', 5, 1, 8000);
INSERT INTO accountgroups VALUES ('Income Tax', 5, 1, 9000);
INSERT INTO accountgroups VALUES ('Fixed Assets', 10, 0, 1000);
INSERT INTO accountgroups VALUES ('Current Assets', 20, 0, 1500);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: chartmaster; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO chartmaster VALUES (1010, 'Petty Cash', 'Current Assets');
INSERT INTO chartmaster VALUES (1030, 'Cheque Accounts', 'Current Assets');
INSERT INTO chartmaster VALUES (1040, 'Savings Accounts', 'Current Assets');
INSERT INTO chartmaster VALUES (1050, 'Payroll Accounts', 'Current Assets');
INSERT INTO chartmaster VALUES (1060, 'Special Accounts', 'Current Assets');
INSERT INTO chartmaster VALUES (1070, 'Money Market Investments', 'Current Assets');
INSERT INTO chartmaster VALUES (1080, 'Short-Term Investments (< 90 days)', 'Current Assets');
INSERT INTO chartmaster VALUES (1090, 'Interest Receivable', 'Current Assets');
INSERT INTO chartmaster VALUES (1100, 'Accounts Receivable', 'Current Assets');
INSERT INTO chartmaster VALUES (1150, 'Allowance for Doubtful Accounts', 'Current Assets');
INSERT INTO chartmaster VALUES (1200, 'Notes Receivable', 'Current Assets');
INSERT INTO chartmaster VALUES (1250, 'Income Tax Receivable', 'Current Assets');
INSERT INTO chartmaster VALUES (1300, 'Prepaid Expenses', 'Current Assets');
INSERT INTO chartmaster VALUES (1350, 'Advances', 'Current Assets');
INSERT INTO chartmaster VALUES (1400, 'Supplies Inventory', 'Current Assets');
INSERT INTO chartmaster VALUES (1420, 'Raw Material Inventory', 'Current Assets');
INSERT INTO chartmaster VALUES (1440, 'Work in Progress Inventory', 'Current Assets');
INSERT INTO chartmaster VALUES (1460, 'Finished Goods Inventory', 'Current Assets');
INSERT INTO chartmaster VALUES (1500, 'Land', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1550, 'Bonds', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1600, 'Buildings', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1620, 'Accumulated Depreciation of Buildings', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1650, 'Equipment', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1670, 'Accumulated Depreciation of Equipment', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1700, 'Furniture & Fixtures', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1710, 'Accumulated Depreciation of Furniture & Fixtures', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1720, 'Office Equipment', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1730, 'Accumulated Depreciation of Office Equipment', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1740, 'Software', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1750, 'Accumulated Depreciation of Software', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1760, 'Vehicles', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1770, 'Accumulated Depreciation Vehicles', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1780, 'Other Depreciable Property', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1790, 'Accumulated Depreciation of Other Depreciable Property', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1800, 'Patents', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1850, 'Goodwill', 'Fixed Assets');
INSERT INTO chartmaster VALUES (1900, 'Future Income Tax Receivable', 'Current Assets');
INSERT INTO chartmaster VALUES (2010, 'Bank Indedebtedness (overdraft)', 'Liabilities');
INSERT INTO chartmaster VALUES (2020, 'Retainers or Advances on Work', 'Liabilities');
INSERT INTO chartmaster VALUES (2050, 'Interest Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2100, 'Accounts Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2200, 'Short-Term Loan Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2230, 'Current Portion of Long-Term Debt Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2250, 'Income Tax Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2300, 'GST Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2310, 'GST Recoverable', 'Liabilities');
INSERT INTO chartmaster VALUES (2320, 'PST Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2330, 'PST Recoverable (commission)', 'Liabilities');
INSERT INTO chartmaster VALUES (2340, 'Payroll Tax Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2350, 'Withholding Income Tax Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2360, 'Other Taxes Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2400, 'Employee Salaries Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2410, 'Management Salaries Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2420, 'Director / Partner Fees Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2450, 'Health Benefits Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2460, 'Pension Benefits Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2470, 'Canada Pension Plan Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2480, 'Employment Insurance Premiums Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2500, 'Land Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2550, 'Long-Term Bank Loan', 'Liabilities');
INSERT INTO chartmaster VALUES (2560, 'Notes Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2600, 'Building & Equipment Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2700, 'Furnishing & Fixture Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2720, 'Office Equipment Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2740, 'Vehicle Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2760, 'Other Property Payable', 'Liabilities');
INSERT INTO chartmaster VALUES (2800, 'Shareholder Loans', 'Liabilities');
INSERT INTO chartmaster VALUES (2900, 'Suspense', 'Liabilities');
INSERT INTO chartmaster VALUES (3100, 'Capital Stock', 'Equity');
INSERT INTO chartmaster VALUES (3200, 'Capital Surplus / Dividends', 'Equity');
INSERT INTO chartmaster VALUES (3300, 'Dividend Taxes Payable', 'Equity');
INSERT INTO chartmaster VALUES (3400, 'Dividend Taxes Refundable', 'Equity');
INSERT INTO chartmaster VALUES (3500, 'Retained Earnings', 'Equity');
INSERT INTO chartmaster VALUES (4100, 'Product / Service Sales', 'Revenue');
INSERT INTO chartmaster VALUES (4500, 'Consulting Services', 'Revenue');
INSERT INTO chartmaster VALUES (4600, 'Rentals', 'Revenue');
INSERT INTO chartmaster VALUES (4700, 'Finance Charge Income', 'Revenue');
INSERT INTO chartmaster VALUES (4800, 'Sales Returns & Allowances', 'Revenue');
INSERT INTO chartmaster VALUES (4900, 'Sales Discounts', 'Revenue');
INSERT INTO chartmaster VALUES (5100, 'Production Expenses', 'COG Sold');
INSERT INTO chartmaster VALUES (5500, 'Direct Labour Costs', 'COG Sold');
INSERT INTO chartmaster VALUES (5600, 'Freight Charges', 'COG Sold');
INSERT INTO chartmaster VALUES (5700, 'Inventory Adjustment', 'COG Sold');
INSERT INTO chartmaster VALUES (5800, 'Purchase Returns & Allowances', 'COG Sold');
INSERT INTO chartmaster VALUES (5900, 'Purchase Discounts', 'COG Sold');
INSERT INTO chartmaster VALUES (6100, 'Advertising', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6150, 'Promotion', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6200, 'Communications', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6250, 'Meeting Expenses', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6300, 'Travelling Expenses', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6400, 'Delivery Expenses', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6500, 'Sales Salaries & Commission', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6550, 'Sales Salaries & Commission Deductions', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6590, 'Benefits', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6600, 'Other Selling Expenses', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6700, 'Permits, Licenses & License Fees', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6800, 'Research & Development', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (6900, 'Professional Services', 'Marketing Expenses');
INSERT INTO chartmaster VALUES (7020, 'Support Salaries & Wages', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7030, 'Support Salary & Wage Deductions', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7040, 'Management Salaries', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7050, 'Management Salary deductions', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7060, 'Director / Partner Fees', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7070, 'Director / Partner Deductions', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7080, 'Payroll Tax', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7090, 'Benefits', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7100, 'Training & Education Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7150, 'Dues & Subscriptions', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7200, 'Accounting Fees', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7210, 'Audit Fees', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7220, 'Banking Fees', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7230, 'Credit Card Fees', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7240, 'Consulting Fees', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7260, 'Legal Fees', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7280, 'Other Professional Fees', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7300, 'Business Tax', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7350, 'Property Tax', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7390, 'Corporation Capital Tax', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7400, 'Office Rent', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7450, 'Equipment Rental', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7500, 'Office Supplies', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7550, 'Office Repair & Maintenance', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7600, 'Automotive Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7610, 'Communication Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7620, 'Insurance Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7630, 'Postage & Courier Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7640, 'Miscellaneous Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7650, 'Travel Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7660, 'Utilities', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7700, 'Ammortization Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7750, 'Depreciation Expenses', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7800, 'Interest Expense', 'Operating Expenses');
INSERT INTO chartmaster VALUES (7900, 'Bad Debt Expense', 'Operating Expenses');
INSERT INTO chartmaster VALUES (8100, 'Gain on Sale of Assets', 'Other Revenue and Expenses');
INSERT INTO chartmaster VALUES (8200, 'Interest Income', 'Other Revenue and Expenses');
INSERT INTO chartmaster VALUES (8300, 'Recovery on Bad Debt', 'Other Revenue and Expenses');
INSERT INTO chartmaster VALUES (8400, 'Other Revenue', 'Other Revenue and Expenses');
INSERT INTO chartmaster VALUES (8500, 'Loss on Sale of Assets', 'Other Revenue and Expenses');
INSERT INTO chartmaster VALUES (8600, 'Charitable Contributions', 'Other Revenue and Expenses');
INSERT INTO chartmaster VALUES (8900, 'Other Expenses', 'Other Revenue and Expenses');
INSERT INTO chartmaster VALUES (9100, 'Income Tax Provision', 'Income Tax');
INSERT INTO chartmaster VALUES (1020, 'Cash on Hand', 'Current Assets');
INSERT INTO chartmaster VALUES (1, 'Default Sales/Discounts', 'Sales');
INSERT INTO chartmaster VALUES (5200, 'Cost of Sales', 'COG Sold');
INSERT INTO chartmaster VALUES (2150, 'Goods Received Suspense', 'Liabilities');
INSERT INTO chartmaster VALUES (5250, 'Purchases Exchange Gains/Losses', 'COG Sold');
INSERT INTO chartmaster VALUES (4850, 'Sales Exchange Gains/Losses', 'Sales');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: paymentmethods_paymentid_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('paymentmethods', 'paymentid'), 4, true);


--
-- Data for Name: paymentmethods; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO paymentmethods VALUES (1, 'Cheque', 1, 1);
INSERT INTO paymentmethods VALUES (2, 'Cash', 1, 1);
INSERT INTO paymentmethods VALUES (3, 'Direct Credit', 1, 1);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: bankaccounts; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO bankaccounts VALUES (1030, 'Cheque Account', '1234567899 ', '');
INSERT INTO bankaccounts VALUES (1010, 'Petty Cash', '', '');
INSERT INTO bankaccounts VALUES (1040, 'Savings Account', '', '');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: companies; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO companies VALUES (1, 'webERP Demo', '', '0', '123 Post Office Box', 'The White House', 'Washnington DC', 'USA', '03 45444 5442 ', '03 54444 45454', '', 'USD', 1100, 4900, 2100, 2400, 2150, 4850, 5250, 3500, 1, 1, 1, 5600, NULL, NULL);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: currencies; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO currencies VALUES ('US Dollars', 'USD', 'USA', 'cents', 1.0000);
INSERT INTO currencies VALUES ('Euros Europe', 'EUR', 'European Union', 'cents', 0.8000);
INSERT INTO currencies VALUES ('Rand', 'ZAR', 'South Africa', 'cents', 3.0000);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: holdreasons; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO holdreasons VALUES (20, 'Watch', 0);
INSERT INTO holdreasons VALUES (30, 'No more work until payment rec', 1);
INSERT INTO holdreasons VALUES (1, 'Good History', 0);
INSERT INTO holdreasons VALUES (51, 'In liquidation', 1);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: taxprovinces_taxprovinceid_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('taxprovinces', 'taxprovinceid'), 6, true);


--
-- Data for Name: taxprovinces; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO taxprovinces VALUES (1, 'Default Tax Province');
INSERT INTO taxprovinces VALUES (6, 'Tax Province 2');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: locations; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO locations VALUES ('CPT', 'Cape Town', 'na', 'na', 'na', 'na', 'na', 'weberp@paradise.net.nz', 'na', 1, NULL, NULL, NULL, NULL);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: paymentterms; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO paymentterms VALUES ('7', 'Payment due within 7 days', 7, 0);
INSERT INTO paymentterms VALUES ('20', 'Due 20th Of the Following Month', 0, 22);
INSERT INTO paymentterms VALUES ('30', 'Due By End Of The Following Month', 0, 30);
INSERT INTO paymentterms VALUES ('CA', 'Cash Only', 0, 1);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: systypes; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO systypes VALUES (10, 'Sales Invoice', 8);
INSERT INTO systypes VALUES (2, 'Receipt - GL', 0);
INSERT INTO systypes VALUES (3, 'Standing Journal', 0);
INSERT INTO systypes VALUES (18, 'Purchase Order', 0);
INSERT INTO systypes VALUES (21, 'Debit Note', 0);
INSERT INTO systypes VALUES (23, 'Creditors Journal', 0);
INSERT INTO systypes VALUES (26, 'Work Order Receipt', 0);
INSERT INTO systypes VALUES (28, 'Work Order Issue', 0);
INSERT INTO systypes VALUES (29, 'Work Order Variance', 0);
INSERT INTO systypes VALUES (30, 'Sales Order', 0);
INSERT INTO systypes VALUES (0, 'Journal - GL', 1);
INSERT INTO systypes VALUES (50, 'Opening Balance', 0);
INSERT INTO systypes VALUES (22, 'Creditors Payment', 3);
INSERT INTO systypes VALUES (31, 'Shipment Close', 3);
INSERT INTO systypes VALUES (1, 'Payment - GL', 2);
INSERT INTO systypes VALUES (20, 'Purchase Invoice', 1);
INSERT INTO systypes VALUES (35, 'Cost Update', 2);
INSERT INTO systypes VALUES (500, '"Debtor Number"', 100001);
INSERT INTO systypes VALUES (25, 'Purchase Order Delivery', 5);
INSERT INTO systypes VALUES (15, 'Journal - Debtors', 0);
INSERT INTO systypes VALUES (11, 'Credit Note', 0);
INSERT INTO systypes VALUES (12, 'Receipt', 0);
INSERT INTO systypes VALUES (16, 'Location Transfer', 0);
INSERT INTO systypes VALUES (17, 'Stock Adjustment', 0);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: taxgroups_taxgroupid_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('taxgroups', 'taxgroupid'), 3, true);


--
-- Data for Name: taxgroups; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO taxgroups VALUES (1, 'Default tax group');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: taxcategories_taxcatid_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('taxcategories', 'taxcatid'), 1, true);


--
-- Data for Name: taxcategories; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO taxcategories VALUES (1, 'Taxable supply');
INSERT INTO taxcategories VALUES (0, 'Exempt');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: taxauthorities_taxid_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('taxauthorities', 'taxid'), 5, true);


--
-- Data for Name: taxauthorities; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO taxauthorities VALUES (4, 'GST', 2300, 2310, '', '', '', '');
INSERT INTO taxauthorities VALUES (5, 'PST', 2320, 2330, '', '', '', '');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: taxauthrates; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO taxauthrates VALUES (4, 1, 1, 0.050000000000000003);
INSERT INTO taxauthrates VALUES (4, 1, 0, 0);
INSERT INTO taxauthrates VALUES (5, 1, 1, 0.089999999999999997);
INSERT INTO taxauthrates VALUES (5, 1, 0, 0);
INSERT INTO taxauthrates VALUES (4, 6, 1, 0);
INSERT INTO taxauthrates VALUES (4, 6, 0, 0);
INSERT INTO taxauthrates VALUES (5, 6, 1, 0);
INSERT INTO taxauthrates VALUES (5, 6, 0, 0);


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: taxprovinces_taxprovinceid_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('taxprovinces', 'taxprovinceid'), 6, true);


--
-- Data for Name: taxprovinces; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO taxprovinces VALUES (1, 'Default Tax Province');
INSERT INTO taxprovinces VALUES (6, 'Tax Province 2');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: www_users; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO www_users VALUES ('phil', 'bf3d297ef7c3218f38d71de15d4fb11171e7209c', 'Phil Daintree', '', '', '', 'CPT', 1, '2006-12-14 09:59:15', '', 'A4', '1,0,0,1,1,0,1,0,', 0, 50, 'fresh', 'en_GB');
INSERT INTO www_users VALUES ('demo', 'f0f77a7f88e7c1e93ab4e316b4574c7843b00ea4', 'administrator', '', '', '', 'CPT', 8, '2007-01-02 20:44:20', '', 'A4', '1,1,1,1,1,1,1,1,', 0, 50, 'fresh', 'en_GB');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: edi_orders_segs_id_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('edi_orders_segs', 'id'), 1, false);


--
-- Data for Name: edi_orders_segs; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--



--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: edi_orders_seg_groups; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--



--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: config; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO config VALUES ('DefaultDateFormat', 'd/m/Y');
INSERT INTO config VALUES ('PastDueDays1', '30');
INSERT INTO config VALUES ('PastDueDays2', '60');
INSERT INTO config VALUES ('DefaultCreditLimit', '1000');
INSERT INTO config VALUES ('Show_Settled_LastMonth', '1');
INSERT INTO config VALUES ('RomalpaClause', 'Ownership will not pass to the buyer until the goods have been paid for in full.');
INSERT INTO config VALUES ('QuickEntries', '10');
INSERT INTO config VALUES ('DispatchCutOffTime', '14');
INSERT INTO config VALUES ('AllowSalesOfZeroCostItems', '0');
INSERT INTO config VALUES ('CreditingControlledItems_MustExist', '0');
INSERT INTO config VALUES ('DefaultPriceList', 'WS');
INSERT INTO config VALUES ('Default_Shipper', '1');
INSERT INTO config VALUES ('DoFreightCalc', '0');
INSERT INTO config VALUES ('FreightChargeAppliesIfLessThan', '1000');
INSERT INTO config VALUES ('TaxAuthorityReferenceName', 'Tax Ref');
INSERT INTO config VALUES ('NumberOfPeriodsOfStockUsage', '12');
INSERT INTO config VALUES ('Check_Qty_Charged_vs_Del_Qty', '1');
INSERT INTO config VALUES ('Check_Price_Charged_vs_Order_Price', '1');
INSERT INTO config VALUES ('OverChargeProportion', '30');
INSERT INTO config VALUES ('OverReceiveProportion', '20');
INSERT INTO config VALUES ('PO_AllowSameItemMultipleTimes', '1');
INSERT INTO config VALUES ('YearEnd', '3');
INSERT INTO config VALUES ('PageLength', '48');
INSERT INTO config VALUES ('MaxImageSize', '300');
INSERT INTO config VALUES ('EDIHeaderMsgId', 'D:01B:UN:EAN010');
INSERT INTO config VALUES ('EDIReference', 'WEBERP');
INSERT INTO config VALUES ('EDI_MsgSent', 'EDI_Sent');
INSERT INTO config VALUES ('DefaultDisplayRecordsMax', '50');
INSERT INTO config VALUES ('RadioBeaconStockLocation', 'BL');
INSERT INTO config VALUES ('RadioBeaconHomeDir', '/home/RadioBeacon');
INSERT INTO config VALUES ('RadioBeaconFileCounter', '/home/RadioBeacon/FileCounter');
INSERT INTO config VALUES ('RadioBreaconFilePrefix', 'ORDXX');
INSERT INTO config VALUES ('RadioBraconFTP_server', '192.168.2.2');
INSERT INTO config VALUES ('RadioBeaconFTP_user_name', 'RadioBeacon ftp server user name');
INSERT INTO config VALUES ('RadionBeaconFTP_user_pass', 'Radio Beacon remote ftp server password');
INSERT INTO config VALUES ('CountryOfOperation', 'EUR');
INSERT INTO config VALUES ('DefaultTheme', 'professional');
INSERT INTO config VALUES ('DefaultTaxCategory', '1');
INSERT INTO config VALUES ('EDI_Incoming_Orders', 'companies/weberp/EDI_Incoming_Orders');
INSERT INTO config VALUES ('HTTPS_Only', '0');
INSERT INTO config VALUES ('EDI_MsgPending', 'companies/weberp/EDI_MsgPending');
INSERT INTO config VALUES ('AutoDebtorNo', '0');
INSERT INTO config VALUES ('PackNoteFormat', '1');
INSERT INTO config VALUES ('DefaultBlindPackNote', '1');
INSERT INTO config VALUES ('CheckCreditLimits', '0');
INSERT INTO config VALUES ('FreightTaxCategory', '1');
INSERT INTO config VALUES ('DB_Maintenance_LastRun', '2006-12-14');
INSERT INTO config VALUES ('part_pics_dir', 'companies/weberp/part_pics');
INSERT INTO config VALUES ('reports_dir', 'companies/weberp/reports');
INSERT INTO config VALUES ('DB_Maintenance', '0');
INSERT INTO config VALUES ('WeightedAverageCosting', '1');
INSERT INTO config VALUES ('ProhibitPostingsBefore', '2005-08-31');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: unitsofmeasure_unitid_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('unitsofmeasure', 'unitid'), 6, true);


--
-- Data for Name: unitsofmeasure; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO unitsofmeasure VALUES (2, 'metres');
INSERT INTO unitsofmeasure VALUES (3, 'kgs');
INSERT INTO unitsofmeasure VALUES (4, 'litres');
INSERT INTO unitsofmeasure VALUES (5, 'length');
INSERT INTO unitsofmeasure VALUES (6, 'pack');
INSERT INTO unitsofmeasure VALUES (1, 'each');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: securitytokens; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO securitytokens VALUES (9, 'Ledger Maintenance and Manufacturing');
INSERT INTO securitytokens VALUES (1, 'Menu and order entry only');
INSERT INTO securitytokens VALUES (2, 'Inventory, AR & AP inquiries & reports ');
INSERT INTO securitytokens VALUES (3, 'AR setup customers, areas, receipts, allocations, credit notes, salesfolk, credit status');
INSERT INTO securitytokens VALUES (4, 'PO Entry, Purchasing data & reorder levels');
INSERT INTO securitytokens VALUES (5, 'AP Invoice, Credit, Payment entry. Supplier maintenance');
INSERT INTO securitytokens VALUES (6, 'Not used');
INSERT INTO securitytokens VALUES (7, 'Bank reconciliations');
INSERT INTO securitytokens VALUES (10, 'GL Journals, COA, sales/COGS GL postings, terms, cost update, company prefs');
INSERT INTO securitytokens VALUES (11, 'Pricing & Inventory locations, categories, receiving & adjustments ');
INSERT INTO securitytokens VALUES (15, 'User management, System Admin setup & utilities');
INSERT INTO securitytokens VALUES (12, 'No Used');
INSERT INTO securitytokens VALUES (14, 'Not Used');
INSERT INTO securitytokens VALUES (13, 'Not Used');
INSERT INTO securitytokens VALUES (8, 'GL Journals, COA, sales/COGS GL postings, terms, cost update, company prefs');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Name: securityroles_secroleid_seq; Type: SEQUENCE SET; Schema: public; Owner: weberp_db_user
--

SELECT pg_catalog.setval(pg_catalog.pg_get_serial_sequence('securityroles', 'secroleid'), 1, false);


--
-- Data for Name: securityroles; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO securityroles VALUES (1, 'Inquiries/Order Entry');
INSERT INTO securityroles VALUES (2, 'Manufac/Stock Admin');
INSERT INTO securityroles VALUES (3, 'Purchasing Officer');
INSERT INTO securityroles VALUES (4, 'AP Clerk');
INSERT INTO securityroles VALUES (5, 'AR Clerk');
INSERT INTO securityroles VALUES (6, 'Accountant');
INSERT INTO securityroles VALUES (7, 'Customer Log On Only');
INSERT INTO securityroles VALUES (8, 'System Administrator');


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- Data for Name: securitygroups; Type: TABLE DATA; Schema: public; Owner: weberp_db_user
--

INSERT INTO securitygroups VALUES (1, 1);
INSERT INTO securitygroups VALUES (1, 2);
INSERT INTO securitygroups VALUES (2, 1);
INSERT INTO securitygroups VALUES (2, 2);
INSERT INTO securitygroups VALUES (3, 1);
INSERT INTO securitygroups VALUES (3, 2);
INSERT INTO securitygroups VALUES (3, 3);
INSERT INTO securitygroups VALUES (3, 4);
INSERT INTO securitygroups VALUES (3, 5);
INSERT INTO securitygroups VALUES (3, 11);
INSERT INTO securitygroups VALUES (4, 1);
INSERT INTO securitygroups VALUES (4, 2);
INSERT INTO securitygroups VALUES (4, 5);
INSERT INTO securitygroups VALUES (5, 1);
INSERT INTO securitygroups VALUES (5, 2);
INSERT INTO securitygroups VALUES (5, 3);
INSERT INTO securitygroups VALUES (5, 11);
INSERT INTO securitygroups VALUES (6, 1);
INSERT INTO securitygroups VALUES (6, 2);
INSERT INTO securitygroups VALUES (6, 3);
INSERT INTO securitygroups VALUES (6, 4);
INSERT INTO securitygroups VALUES (6, 5);
INSERT INTO securitygroups VALUES (6, 6);
INSERT INTO securitygroups VALUES (6, 7);
INSERT INTO securitygroups VALUES (6, 8);
INSERT INTO securitygroups VALUES (6, 9);
INSERT INTO securitygroups VALUES (6, 10);
INSERT INTO securitygroups VALUES (6, 11);
INSERT INTO securitygroups VALUES (7, 1);
INSERT INTO securitygroups VALUES (8, 1);
INSERT INTO securitygroups VALUES (8, 2);
INSERT INTO securitygroups VALUES (8, 3);
INSERT INTO securitygroups VALUES (8, 4);
INSERT INTO securitygroups VALUES (8, 5);
INSERT INTO securitygroups VALUES (8, 6);
INSERT INTO securitygroups VALUES (8, 7);
INSERT INTO securitygroups VALUES (8, 8);
INSERT INTO securitygroups VALUES (8, 9);
INSERT INTO securitygroups VALUES (8, 10);
INSERT INTO securitygroups VALUES (8, 11);
INSERT INTO securitygroups VALUES (8, 12);
INSERT INTO securitygroups VALUES (8, 13);
INSERT INTO securitygroups VALUES (8, 14);
INSERT INTO securitygroups VALUES (8, 15);
INSERT INTO securitygroups VALUES (4, 13);
INSERT INTO securitygroups VALUES (2, 11);


--
-- PostgreSQL database dump complete
--

UPDATE systypes SET typeno=0;
INSERT INTO shippers VALUES (1,'Default Shipper',0);
UPDATE config SET confvalue='1' WHERE confname='Default_Shipper';
